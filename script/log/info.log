2025-03-04 05:08:38,153 - INFO - ===== Start Extracting education_status data =====
2025-03-04 05:08:38,421 - ERROR - ====== Failed to Extract Data ======
2025-03-04 05:08:38,422 - ERROR - An error occurred while calling o28.jdbc.
: org.postgresql.util.PSQLException: Unable to parse URL jdbc:postgresql://:/
	at org.postgresql.Driver.connect(Driver.java:280)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:49)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:160)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:156)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:63)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at org.apache.spark.sql.DataFrameReader.jdbc(DataFrameReader.scala:249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-04 05:09:41,217 - INFO - ===== Start Extracting education_status data =====
2025-03-04 05:09:41,276 - ERROR - ====== Failed to Extract Data ======
2025-03-04 05:09:41,276 - ERROR - An error occurred while calling o35.jdbc.
: org.postgresql.util.PSQLException: Unable to parse URL jdbc:postgresql://:/
	at org.postgresql.Driver.connect(Driver.java:280)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:49)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:160)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:156)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:63)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at org.apache.spark.sql.DataFrameReader.jdbc(DataFrameReader.scala:249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-04 05:11:13,456 - INFO - ===== Start Extracting education_status data =====
2025-03-04 05:11:13,814 - ERROR - ====== Failed to Extract Data ======
2025-03-04 05:11:13,815 - ERROR - An error occurred while calling o28.jdbc.
: org.postgresql.util.PSQLException: Unable to parse URL jdbc:postgresql://:/
	at org.postgresql.Driver.connect(Driver.java:280)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:49)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:160)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:156)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:63)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at org.apache.spark.sql.DataFrameReader.jdbc(DataFrameReader.scala:249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-04 05:14:43,968 - INFO - ===== Start Extracting education_status data =====
2025-03-04 05:14:44,182 - ERROR - ====== Failed to Extract Data ======
2025-03-04 05:14:44,183 - ERROR - An error occurred while calling o28.jdbc.
: org.postgresql.util.PSQLException: Unable to parse URL jdbc:postgresql://:/
	at org.postgresql.Driver.connect(Driver.java:280)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:49)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:160)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:156)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:63)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at org.apache.spark.sql.DataFrameReader.jdbc(DataFrameReader.scala:249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-04 05:17:57,210 - INFO - ===== Start Extracting education_status data =====
2025-03-04 05:17:57,467 - ERROR - ====== Failed to Extract Data ======
2025-03-04 05:17:57,468 - ERROR - An error occurred while calling o28.jdbc.
: org.postgresql.util.PSQLException: Unable to parse URL jdbc:postgresql://:/
	at org.postgresql.Driver.connect(Driver.java:280)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:49)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:160)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:156)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:63)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at org.apache.spark.sql.DataFrameReader.jdbc(DataFrameReader.scala:249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-04 05:19:20,104 - INFO - ===== Start Extracting education_status data =====
2025-03-04 05:19:20,349 - ERROR - ====== Failed to Extract Data ======
2025-03-04 05:19:20,349 - ERROR - An error occurred while calling o28.jdbc.
: org.postgresql.util.PSQLException: Unable to parse URL jdbc:postgresql://:/
	at org.postgresql.Driver.connect(Driver.java:280)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:49)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:160)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:156)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:63)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at org.apache.spark.sql.DataFrameReader.jdbc(DataFrameReader.scala:249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-04 05:21:21,402 - INFO - ===== Start Extracting education_status data =====
2025-03-04 05:21:23,324 - INFO - ===== Finish Extracting education_status data =====
2025-03-04 05:21:23,329 - INFO - ===== Start Extracting marital_status data =====
2025-03-04 05:21:23,400 - INFO - ===== Finish Extracting marital_status data =====
2025-03-04 05:21:23,406 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-04 05:21:23,496 - INFO - ===== Finish Extracting marketing_campaign_deposit data =====
2025-03-04 05:21:23,501 - INFO - ===== Start Extracting new_bank_transaction data =====
2025-03-04 05:21:29,470 - INFO - ===== Finish Extracting new_bank_transaction data =====
2025-03-04 05:21:29,534 - ERROR - ===== Failed Load data to the database =====
2025-03-04 05:21:29,535 - ERROR - No module named 'psycopg2'
2025-03-04 05:26:56,377 - INFO - ===== Start Extracting education_status data =====
2025-03-04 05:26:58,038 - INFO - ===== Finish Extracting education_status data =====
2025-03-04 05:26:58,045 - INFO - ===== Start Extracting marital_status data =====
2025-03-04 05:26:58,144 - INFO - ===== Finish Extracting marital_status data =====
2025-03-04 05:26:58,151 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-04 05:26:58,256 - INFO - ===== Finish Extracting marketing_campaign_deposit data =====
2025-03-04 05:26:58,261 - INFO - ===== Start Extracting new_bank_transaction data =====
2025-03-04 05:27:03,734 - INFO - ===== Finish Extracting new_bank_transaction data =====
2025-03-04 05:27:03,792 - ERROR - ===== Failed Load data to the database =====
2025-03-04 05:27:03,793 - ERROR - No module named 'psycopg2'
2025-03-04 05:29:34,191 - INFO - ===== Start Extracting education_status data =====
2025-03-04 05:29:35,710 - INFO - ===== Finish Extracting education_status data =====
2025-03-04 05:29:35,715 - INFO - ===== Start Extracting marital_status data =====
2025-03-04 05:29:35,816 - INFO - ===== Finish Extracting marital_status data =====
2025-03-04 05:29:35,820 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-04 05:29:35,932 - INFO - ===== Finish Extracting marketing_campaign_deposit data =====
2025-03-04 05:29:35,938 - INFO - ===== Start Extracting new_bank_transaction data =====
2025-03-04 05:29:40,668 - INFO - ===== Finish Extracting new_bank_transaction data =====
2025-03-04 05:29:40,742 - INFO - ===== Start Load data to the database =====
2025-03-04 05:29:41,483 - INFO - ===== Finish Load data to the database =====
2025-03-04 05:29:41,485 - INFO - ===== Start Load data to the database =====
2025-03-04 05:29:41,786 - INFO - ===== Finish Load data to the database =====
2025-03-04 05:29:41,789 - INFO - ===== Start Renaming Columns based on the requirements =====
2025-03-04 05:29:41,861 - INFO - ===== Start Transforming balance column =====
2025-03-04 05:29:41,957 - INFO - ===== Start Transforming duration column =====
2025-03-04 05:29:42,027 - INFO - ===== Start Transforming Customers based on the requirements =====
2025-03-04 05:29:42,533 - INFO - ===== Start Transforming Customers based on the requirements =====
2025-03-04 05:29:42,693 - INFO - ===== Start Load data to the database =====
2025-03-04 05:29:47,148 - INFO - ===== Finish Load data to the database =====
2025-03-04 05:29:47,150 - INFO - ===== Start Load data to the database =====
2025-03-04 05:30:21,217 - INFO - ===== Finish Load data to the database =====
2025-03-04 05:30:21,218 - INFO - ===== Start Load data to the database =====
2025-03-04 05:30:47,859 - INFO - ===== Finish Load data to the database =====
2025-03-15 08:20:56,667 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-15 08:21:01,350 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-15 08:21:01,350 - INFO - ===== Start Extracting education_status data =====
2025-03-15 08:21:01,780 - INFO - ===== Success Extracting education_status data =====
2025-03-15 08:21:01,781 - INFO - ===== Start Extracting marital_status data =====
2025-03-15 08:21:01,846 - INFO - ===== Success Extracting marital_status data =====
2025-03-15 08:21:01,846 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-15 08:21:01,937 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-15 08:21:01,984 - INFO - Closing down clientserver connection
2025-03-15 08:22:21,705 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-15 08:22:26,428 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-15 08:22:26,429 - INFO - ===== Start Extracting education_status data =====
2025-03-15 08:22:26,827 - INFO - ===== Success Extracting education_status data =====
2025-03-15 08:22:26,828 - INFO - ===== Start Extracting marital_status data =====
2025-03-15 08:22:26,897 - INFO - ===== Success Extracting marital_status data =====
2025-03-15 08:22:26,898 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-15 08:22:26,965 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-15 08:22:27,468 - INFO - Closing down clientserver connection
2025-03-15 13:51:35,046 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-15 13:51:40,317 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-15 13:51:40,317 - INFO - ===== Start Extracting education_status data =====
2025-03-15 13:51:40,763 - INFO - ===== Success Extracting education_status data =====
2025-03-15 13:51:40,763 - INFO - ===== Start Extracting marital_status data =====
2025-03-15 13:51:40,836 - INFO - ===== Success Extracting marital_status data =====
2025-03-15 13:51:40,836 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-15 13:51:40,945 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-15 13:51:41,856 - INFO - Closing down clientserver connection
2025-03-15 14:00:09,832 - INFO - ===== Start Extracting education_status data =====
2025-03-15 14:00:11,160 - INFO - ===== Success Extracting education_status data =====
2025-03-15 14:00:11,161 - INFO - ===== Start Extracting marital_status data =====
2025-03-15 14:00:11,207 - INFO - ===== Success Extracting marital_status data =====
2025-03-15 14:00:11,207 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-15 14:00:11,327 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-15 14:02:53,066 - INFO - ===== Start Extracting education_status data =====
2025-03-15 14:02:53,128 - INFO - ===== Success Extracting education_status data =====
2025-03-15 14:02:53,128 - INFO - ===== Start Extracting marital_status data =====
2025-03-15 14:02:53,166 - INFO - ===== Success Extracting marital_status data =====
2025-03-15 14:02:53,166 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-15 14:02:53,222 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-15 14:14:23,079 - INFO - ===== Start Extracting education_status data =====
2025-03-15 14:14:23,129 - INFO - ===== Success Extracting education_status data =====
2025-03-15 14:14:23,129 - INFO - ===== Start Extracting marital_status data =====
2025-03-15 14:14:23,163 - INFO - ===== Success Extracting marital_status data =====
2025-03-15 14:14:23,163 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-15 14:14:23,201 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-15 14:20:44,568 - INFO - ===== Start Extracting education_status data =====
2025-03-15 14:20:44,620 - INFO - ===== Success Extracting education_status data =====
2025-03-15 14:20:44,620 - INFO - ===== Start Extracting marital_status data =====
2025-03-15 14:20:44,653 - INFO - ===== Success Extracting marital_status data =====
2025-03-15 14:20:44,653 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-15 14:20:44,685 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-15 14:21:47,580 - INFO - ===== Start Extracting education_status data =====
2025-03-15 14:21:47,629 - INFO - ===== Success Extracting education_status data =====
2025-03-15 14:21:47,629 - INFO - ===== Start Extracting marital_status data =====
2025-03-15 14:21:47,659 - INFO - ===== Success Extracting marital_status data =====
2025-03-15 14:21:47,659 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-15 14:21:47,692 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-15 14:22:09,086 - INFO - ===== Start Extracting education_status data =====
2025-03-15 14:22:09,158 - INFO - ===== Success Extracting education_status data =====
2025-03-15 14:22:09,159 - INFO - ===== Start Extracting marital_status data =====
2025-03-15 14:22:09,198 - INFO - ===== Success Extracting marital_status data =====
2025-03-15 14:22:09,199 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-15 14:22:09,232 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-16 01:59:57,717 - INFO - ===== Start Extracting education_status data =====
2025-03-16 01:59:59,735 - INFO - ===== Success Extracting education_status data =====
2025-03-16 01:59:59,735 - INFO - ===== Start Extracting marital_status data =====
2025-03-16 01:59:59,801 - INFO - ===== Success Extracting marital_status data =====
2025-03-16 01:59:59,801 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-16 01:59:59,923 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-16 02:00:06,006 - INFO - ===== Start Extracting education_status data =====
2025-03-16 02:00:06,086 - INFO - ===== Success Extracting education_status data =====
2025-03-16 02:00:06,086 - INFO - ===== Start Extracting marital_status data =====
2025-03-16 02:00:06,149 - INFO - ===== Success Extracting marital_status data =====
2025-03-16 02:00:06,150 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-16 02:00:06,220 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-16 02:00:21,163 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-16 02:00:21,336 - ERROR - ====== Failed to Extract Data data/new_bank_transaction.csv ======
2025-03-16 02:00:21,336 - ERROR - [PATH_NOT_FOUND] Path does not exist: file:/home/jovyan/work/transform/data/new_bank_transaction.csv.
2025-03-16 02:01:01,378 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-16 02:01:01,433 - ERROR - ====== Failed to Extract Data data/new_bank_transaction.csv ======
2025-03-16 02:01:01,433 - ERROR - [PATH_NOT_FOUND] Path does not exist: file:/home/jovyan/work/transform/data/new_bank_transaction.csv.
2025-03-16 02:01:33,125 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-16 02:01:38,230 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-16 02:01:38,230 - INFO - ===== Start Extracting education_status data =====
2025-03-16 02:01:38,610 - INFO - ===== Success Extracting education_status data =====
2025-03-16 02:01:38,610 - INFO - ===== Start Extracting marital_status data =====
2025-03-16 02:01:38,665 - INFO - ===== Success Extracting marital_status data =====
2025-03-16 02:01:38,666 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-16 02:01:38,756 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-16 02:01:39,679 - INFO - Closing down clientserver connection
2025-03-16 02:03:46,298 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-16 02:03:47,203 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-16 02:04:45,295 - INFO - ===== Start Extracting education_status data =====
2025-03-16 02:04:45,335 - INFO - ===== Success Extracting education_status data =====
2025-03-16 02:04:45,336 - INFO - ===== Start Extracting marital_status data =====
2025-03-16 02:04:45,365 - INFO - ===== Success Extracting marital_status data =====
2025-03-16 02:04:45,365 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-16 02:04:45,399 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-16 02:51:31,848 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 02:51:31,863 - WARNING - No such comm: 309788ed-8033-4bee-b404-19ae37254aea
2025-03-16 04:33:49,175 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 04:33:49,180 - WARNING - No such comm: d816ea7e-5a49-4955-81a0-feaa655b510b
2025-03-16 04:50:35,185 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 04:50:35,191 - WARNING - No such comm: 15a9e108-884c-4565-bb7c-ffc7c3c43fbf
2025-03-16 04:53:57,793 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 04:53:57,799 - WARNING - No such comm: c1114842-bfe6-42cb-8672-bae750e4d87c
2025-03-16 07:25:51,187 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 07:25:51,196 - WARNING - No such comm: 633d971f-be86-44f9-a8ca-5b857b9d699a
2025-03-16 07:26:00,568 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 07:26:00,588 - WARNING - No such comm: 413ac5b7-1cc7-4248-8684-4ca8ead120d0
2025-03-16 07:26:10,973 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 07:26:11,005 - WARNING - No such comm: 6d88a64f-5b39-4134-8cee-7397d950d43f
2025-03-16 07:26:33,288 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-16 07:26:33,561 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-16 08:20:19,041 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 08:20:19,118 - WARNING - No such comm: 765a43de-3cff-4e67-8425-64bbf0fc15ba
2025-03-16 10:55:56,228 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 10:55:56,240 - WARNING - No such comm: 393ad536-79a8-47e2-92d6-2a3b64ec171e
2025-03-16 11:39:58,394 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 11:39:58,409 - WARNING - No such comm: 78a80b67-aa3a-4dce-a51f-ae16c8bebbb7
2025-03-16 12:26:41,253 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 12:26:41,262 - WARNING - No such comm: b1070300-4ef7-4467-8a00-64dcbc425cda
2025-03-16 13:53:51,021 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 13:53:51,027 - WARNING - No such comm: 484e2512-11c1-44f7-873f-a7c91a7ecf97
2025-03-16 14:28:09,986 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 14:28:09,990 - WARNING - No such comm: bfd0ef3a-4956-4850-9fd7-c4837399b4b3
2025-03-16 14:35:54,951 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-16 14:35:54,961 - WARNING - No such comm: 30a1548e-f7e9-4125-9b37-91755472f659
2025-03-18 02:37:34,006 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 02:37:34,015 - WARNING - No such comm: 50548cc7-7ba5-4478-9932-6351331baedb
2025-03-18 02:39:38,246 - INFO - ===== Start Extracting education_status data =====
2025-03-18 02:39:38,319 - INFO - ===== Success Extracting education_status data =====
2025-03-18 02:39:38,320 - INFO - ===== Start Extracting marital_status data =====
2025-03-18 02:39:38,348 - INFO - ===== Success Extracting marital_status data =====
2025-03-18 02:39:38,348 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-18 02:39:38,387 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-18 02:39:41,942 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-18 02:39:42,166 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-18 02:59:40,368 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 02:59:40,373 - WARNING - No such comm: fcf1077c-7de8-49ee-9e05-8171df7ff4ce
2025-03-18 03:18:03,064 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 03:18:03,069 - WARNING - No such comm: e5a4a7b0-9351-4a0d-95c1-467ac156effa
2025-03-18 03:25:13,702 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 03:25:13,705 - WARNING - No such comm: 9ba5f326-5986-4edb-bf00-ebded3664a9a
2025-03-18 03:37:26,163 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 03:37:26,177 - WARNING - No such comm: b0186368-998e-4c9b-945e-42d171ab87b2
2025-03-18 04:10:29,452 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 04:10:29,457 - WARNING - No such comm: 3ce40b36-d1c9-47e0-a3d0-fea5daa2e045
2025-03-18 04:15:58,933 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 04:15:58,942 - WARNING - No such comm: dfef3d67-3798-4db8-9e0c-2493fa869b20
2025-03-18 04:22:33,862 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 04:22:33,873 - WARNING - No such comm: 52a8ee74-b551-48b5-a6f4-d3b4ac2b55a4
2025-03-18 04:27:39,229 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 04:27:39,238 - WARNING - No such comm: 860536ce-e1a6-4c89-9dbd-2df214298ace
2025-03-18 04:33:30,499 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 04:33:30,505 - WARNING - No such comm: c0ff1dc4-648b-49eb-bf60-020287e73327
2025-03-18 04:49:56,159 - INFO - Closing down clientserver connection
2025-03-18 04:50:47,733 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-18 04:50:52,499 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-18 04:50:52,500 - INFO - ===== Start Extracting education_status data =====
2025-03-18 04:50:52,944 - INFO - ===== Success Extracting education_status data =====
2025-03-18 04:50:52,944 - INFO - ===== Start Extracting marital_status data =====
2025-03-18 04:50:53,011 - INFO - ===== Success Extracting marital_status data =====
2025-03-18 04:50:53,011 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-18 04:50:53,102 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-18 04:50:54,926 - INFO - Closing down clientserver connection
2025-03-18 04:51:28,093 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-18 04:51:32,610 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-18 04:51:32,610 - INFO - ===== Start Extracting education_status data =====
2025-03-18 04:51:33,030 - INFO - ===== Success Extracting education_status data =====
2025-03-18 04:51:33,031 - INFO - ===== Start Extracting marital_status data =====
2025-03-18 04:51:33,091 - INFO - ===== Success Extracting marital_status data =====
2025-03-18 04:51:33,091 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-18 04:51:33,164 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-18 04:51:34,754 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,162 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 516, in send_command
    raise Py4JNetworkError("Answer from Java side is empty")
py4j.protocol.Py4JNetworkError: Answer from Java side is empty
2025-03-18 04:57:48,166 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,167 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 516, in send_command
    raise Py4JNetworkError("Answer from Java side is empty")
py4j.protocol.Py4JNetworkError: Answer from Java side is empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-18 04:57:48,168 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,555 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 516, in send_command
    raise Py4JNetworkError("Answer from Java side is empty")
py4j.protocol.Py4JNetworkError: Answer from Java side is empty
2025-03-18 04:57:48,556 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,556 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 516, in send_command
    raise Py4JNetworkError("Answer from Java side is empty")
py4j.protocol.Py4JNetworkError: Answer from Java side is empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-18 04:57:48,557 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,558 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,559 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,559 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,559 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,559 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,559 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,559 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,560 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,560 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,560 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,560 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,560 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,561 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,561 - INFO - Closing down clientserver connection
2025-03-18 04:57:48,570 - INFO - Closing down clientserver connection
2025-03-18 04:58:00,201 - INFO - Closing down clientserver connection
2025-03-18 04:58:00,860 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,303 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,492 - INFO - ===== Start Extracting education_status data =====
2025-03-18 04:58:08,495 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,495 - ERROR - ====== Failed to Extract Data education_status ======
2025-03-18 04:58:08,495 - ERROR - [Errno 111] Connection refused
2025-03-18 04:58:08,495 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,496 - INFO - ===== Start Extracting marital_status data =====
2025-03-18 04:58:08,496 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,497 - ERROR - ====== Failed to Extract Data marital_status ======
2025-03-18 04:58:08,498 - ERROR - [Errno 111] Connection refused
2025-03-18 04:58:08,498 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,498 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-18 04:58:08,498 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,498 - ERROR - ====== Failed to Extract Data marketing_campaign_deposit ======
2025-03-18 04:58:08,498 - ERROR - [Errno 111] Connection refused
2025-03-18 04:58:08,498 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,568 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,568 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,568 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,568 - INFO - Closing down clientserver connection
2025-03-18 04:58:08,704 - INFO - Closing down clientserver connection
2025-03-18 04:58:17,341 - INFO - Closing down clientserver connection
2025-03-18 04:59:11,739 - INFO - Closing down clientserver connection
2025-03-18 04:59:26,516 - INFO - Closing down clientserver connection
2025-03-18 04:59:50,663 - INFO - Closing down clientserver connection
2025-03-18 05:01:46,712 - INFO - Closing down clientserver connection
2025-03-18 05:06:54,873 - INFO - ===== Start Extracting education_status data =====
2025-03-18 05:06:56,172 - INFO - ===== Success Extracting education_status data =====
2025-03-18 05:06:56,173 - INFO - ===== Start Extracting marital_status data =====
2025-03-18 05:06:56,246 - INFO - ===== Success Extracting marital_status data =====
2025-03-18 05:06:56,247 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-18 05:06:56,362 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-18 05:07:01,893 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-18 05:07:02,875 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-18 05:20:37,098 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-18 05:20:37,378 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-18 05:25:53,932 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 05:25:53,944 - WARNING - No such comm: a4f547ff-0c11-4b9d-a48f-6fbee191d261
2025-03-18 06:22:09,200 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 06:22:09,210 - WARNING - No such comm: 69793fc1-f5ad-43ed-82f1-4cf52c97a5e5
2025-03-18 07:19:00,623 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 07:19:00,652 - WARNING - No such comm: ca921305-e5f1-4e44-af7c-1e40e53f2d39
2025-03-18 07:24:19,298 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 07:24:19,309 - WARNING - No such comm: ee40c624-8178-45a4-968d-fb223a88b34a
2025-03-18 07:25:24,418 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 07:25:24,424 - WARNING - No such comm: 43713ba0-d31d-4ff2-9bf1-cb241fcd8d36
2025-03-18 07:52:15,061 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 07:52:15,072 - WARNING - No such comm: 2c59a6c7-d424-4a19-b314-84deb1119d0b
2025-03-18 07:54:42,226 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-18 07:54:42,232 - WARNING - No such comm: aafe0f04-5797-49f9-bdc6-3bb89c161d69
2025-03-18 07:58:39,159 - INFO - Closing down clientserver connection
2025-03-18 07:59:08,481 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-18 07:59:13,526 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-18 07:59:13,527 - INFO - ===== Start Extracting education_status data =====
2025-03-18 07:59:13,920 - INFO - ===== Success Extracting education_status data =====
2025-03-18 07:59:13,920 - INFO - ===== Start Extracting marital_status data =====
2025-03-18 07:59:13,976 - INFO - ===== Success Extracting marital_status data =====
2025-03-18 07:59:13,976 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-18 07:59:14,062 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-18 07:59:16,031 - INFO - Closing down clientserver connection
2025-03-18 07:59:46,855 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-18 07:59:51,498 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-18 07:59:51,498 - INFO - ===== Start Extracting education_status data =====
2025-03-18 07:59:51,885 - INFO - ===== Success Extracting education_status data =====
2025-03-18 07:59:51,886 - INFO - ===== Start Extracting marital_status data =====
2025-03-18 07:59:51,951 - INFO - ===== Success Extracting marital_status data =====
2025-03-18 07:59:51,951 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-18 07:59:52,042 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-18 07:59:56,184 - INFO - Closing down clientserver connection
2025-03-19 00:54:36,393 - INFO - Closing down clientserver connection
2025-03-19 00:55:16,028 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 00:55:20,364 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 00:55:20,364 - INFO - ===== Start Extracting education_status data =====
2025-03-19 00:55:20,852 - INFO - ===== Success Extracting education_status data =====
2025-03-19 00:55:20,852 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 00:55:20,903 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 00:55:20,903 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 00:55:20,984 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 00:55:25,924 - INFO - Closing down clientserver connection
2025-03-19 01:10:30,240 - INFO - ===== Start Extracting education_status data =====
2025-03-19 01:10:31,539 - INFO - ===== Success Extracting education_status data =====
2025-03-19 01:10:31,539 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 01:10:31,622 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 01:10:31,622 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 01:10:31,752 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 01:10:37,055 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 01:10:37,897 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 01:11:01,644 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 01:11:01,833 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 01:15:27,241 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 01:15:30,455 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 01:15:30,455 - INFO - ===== Start Extracting education_status data =====
2025-03-19 01:15:30,758 - INFO - ===== Success Extracting education_status data =====
2025-03-19 01:15:30,758 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 01:15:30,804 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 01:15:30,804 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 01:15:30,878 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 01:15:34,854 - INFO - Closing down clientserver connection
2025-03-19 02:22:01,036 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 02:22:01,179 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 02:26:01,058 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 02:26:01,218 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 03:04:07,954 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-19 03:04:07,983 - WARNING - No such comm: fb31cee7-798f-469f-96e5-7f7535edeeed
2025-03-19 03:20:17,735 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-19 03:20:17,743 - WARNING - No such comm: df6f181f-67b9-4eb8-b533-7f60443c2fa7
2025-03-19 03:43:21,860 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 03:43:22,100 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 03:43:38,717 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 03:43:38,858 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 03:57:09,595 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 03:57:09,725 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 03:57:47,024 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 03:57:47,160 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:09:17,397 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:09:17,524 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:15:46,592 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:15:46,734 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:17:28,545 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:17:28,661 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:19:05,740 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:19:05,865 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:19:49,102 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:19:49,263 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:29:47,897 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-19 04:29:47,905 - WARNING - No such comm: 31cec2dc-3182-4d13-a1d2-6042bc1a74d5
2025-03-19 04:32:49,564 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:32:49,686 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:39:14,073 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:39:14,241 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:40:49,222 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:40:49,359 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:47:51,704 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:47:51,847 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 04:51:48,328 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-19 04:51:48,337 - WARNING - No such comm: 77e0157c-579d-41ca-af60-4cdf5ae1a064
2025-03-19 05:03:36,675 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 05:03:36,831 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 05:20:35,859 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 05:20:36,009 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 05:23:48,179 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 05:23:48,331 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 05:30:47,009 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 05:30:47,136 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 05:31:17,581 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 05:31:17,685 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 06:00:00,812 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-19 06:00:00,821 - WARNING - No such comm: 3ee4c722-535a-4efe-b4a2-847be3f9f6e8
2025-03-19 06:54:49,102 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-19 06:54:49,118 - WARNING - No such comm: 7e2d0452-41f1-4cea-94ba-3e1bea0d4518
2025-03-19 07:58:36,310 - INFO - Closing down clientserver connection
2025-03-19 07:59:08,429 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 07:59:11,914 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 07:59:11,915 - INFO - ===== Start Extracting education_status data =====
2025-03-19 07:59:12,242 - INFO - ===== Success Extracting education_status data =====
2025-03-19 07:59:12,242 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 07:59:12,289 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 07:59:12,290 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 07:59:12,363 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 07:59:13,951 - INFO - Closing down clientserver connection
2025-03-19 07:59:46,524 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 07:59:50,201 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 07:59:50,202 - INFO - ===== Start Extracting education_status data =====
2025-03-19 07:59:50,590 - INFO - ===== Success Extracting education_status data =====
2025-03-19 07:59:50,590 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 07:59:50,640 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 07:59:50,641 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 07:59:50,717 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 08:00:05,690 - INFO - Closing down clientserver connection
2025-03-19 12:14:35,115 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-19 12:14:35,130 - WARNING - No such comm: 9dffec69-1569-41c2-a6ed-c4fd1c6b9701
2025-03-19 12:16:28,470 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:16:33,353 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:16:33,353 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:16:33,750 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:16:33,751 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:16:33,802 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:16:33,802 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:16:33,871 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:16:53,755 - INFO - Closing down clientserver connection
2025-03-19 12:19:14,103 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:19:18,973 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:19:18,973 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:19:19,335 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:19:19,336 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:19:19,383 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:19:19,383 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:19:19,473 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:19:36,875 - INFO - Closing down clientserver connection
2025-03-19 12:20:01,463 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 12:20:01,667 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 12:25:17,912 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:25:22,672 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:25:22,672 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:25:23,023 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:25:23,024 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:25:23,081 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:25:23,081 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:25:23,159 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:25:35,401 - INFO - Closing down clientserver connection
2025-03-19 12:27:18,037 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:27:22,637 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:27:22,637 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:27:22,976 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:27:22,977 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:27:23,033 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:27:23,033 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:27:23,108 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:27:25,291 - INFO - Closing down clientserver connection
2025-03-19 12:29:01,712 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:29:06,303 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:29:06,303 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:29:06,736 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:29:06,737 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:29:06,790 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:29:06,791 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:29:06,862 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:29:27,509 - INFO - Closing down clientserver connection
2025-03-19 12:30:39,012 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:30:43,632 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:30:43,633 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:30:44,024 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:30:44,024 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:30:44,075 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:30:44,076 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:30:44,156 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:31:05,736 - INFO - Closing down clientserver connection
2025-03-19 12:33:23,269 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:33:28,005 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:33:28,005 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:33:28,401 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:33:28,402 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:33:28,471 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:33:28,471 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:33:28,551 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:33:40,647 - INFO - Closing down clientserver connection
2025-03-19 12:44:52,817 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:44:57,326 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:44:57,327 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:44:57,670 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:44:57,671 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:44:57,723 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:44:57,723 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:44:57,816 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:45:11,804 - INFO - Closing down clientserver connection
2025-03-19 12:46:40,442 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:46:44,702 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:46:44,702 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:46:45,027 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:46:45,027 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:46:45,085 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:46:45,085 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:46:45,161 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:46:55,543 - INFO - Closing down clientserver connection
2025-03-19 12:48:12,852 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:48:17,369 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:48:17,370 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:48:17,753 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:48:17,753 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:48:17,810 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:48:17,810 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:48:17,894 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:48:32,271 - INFO - Closing down clientserver connection
2025-03-19 12:55:12,403 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:55:16,909 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 12:55:16,910 - INFO - ===== Start Extracting education_status data =====
2025-03-19 12:55:17,302 - INFO - ===== Success Extracting education_status data =====
2025-03-19 12:55:17,302 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 12:55:17,363 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 12:55:17,363 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 12:55:17,464 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 12:55:27,899 - INFO - Closing down clientserver connection
2025-03-19 13:22:17,469 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 13:22:17,721 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 13:35:04,290 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 13:35:04,612 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 14:38:50,663 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 14:38:50,771 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 14:40:52,584 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 14:40:52,702 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 14:55:43,864 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-19 14:55:43,879 - WARNING - No such comm: bad7f35b-42f1-4352-87a3-0afdb56043b8
2025-03-19 14:57:05,699 - INFO - ===== Start Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 14:57:05,808 - INFO - ===== Success Extracting ../data/new_bank_transaction.csv data =====
2025-03-19 15:00:08,909 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-19 15:00:13,556 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-19 15:00:13,556 - INFO - ===== Start Extracting education_status data =====
2025-03-19 15:00:13,972 - INFO - ===== Success Extracting education_status data =====
2025-03-19 15:00:13,973 - INFO - ===== Start Extracting marital_status data =====
2025-03-19 15:00:14,018 - INFO - ===== Success Extracting marital_status data =====
2025-03-19 15:00:14,018 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-19 15:00:14,090 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-19 15:00:26,227 - INFO - Closing down clientserver connection
2025-03-19 15:04:58,027 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-19 15:04:58,030 - WARNING - No such comm: c0d690e9-fbf1-49b5-843c-16294e140e79
2025-03-20 02:46:03,303 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 02:46:09,390 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 02:46:09,390 - INFO - ===== Start Extracting education_status data =====
2025-03-20 02:46:09,850 - INFO - ===== Success Extracting education_status data =====
2025-03-20 02:46:09,850 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 02:46:09,917 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 02:46:09,918 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 02:46:10,010 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 02:46:25,764 - INFO - Closing down clientserver connection
2025-03-20 03:03:59,952 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 03:04:04,812 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 03:04:04,812 - INFO - ===== Start Extracting education_status data =====
2025-03-20 03:04:05,285 - INFO - ===== Success Extracting education_status data =====
2025-03-20 03:04:05,286 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 03:04:05,366 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 03:04:05,367 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 03:04:05,461 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 03:04:05,499 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 03:04:05,533 - INFO - Renamed Columns
2025-03-20 03:04:05,611 - INFO - Removed '$' in balance column
2025-03-20 03:04:05,663 - INFO - Casted balance column to integer
2025-03-20 03:04:05,757 - INFO - Converted duration in year
2025-03-20 03:04:05,785 - INFO - Casted duration into intefer
2025-03-20 03:04:05,788 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 03:04:05,793 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:04:05,825 - INFO -  Selected columns from Bank transaction data 
2025-03-20 03:04:05,844 - INFO -  Renamed Columns 
2025-03-20 03:04:05,897 - INFO -  Mapped Gender Column 
2025-03-20 03:04:05,921 - INFO - Casted account_balance Column into float
2025-03-20 03:04:06,145 - INFO - Casted birth_date Column into date format
2025-03-20 03:04:06,610 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 03:04:06,616 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:04:17,720 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:04:17,741 - INFO -  Select columns from bank_transaction data
2025-03-20 03:04:17,752 - INFO - Renamed columns
2025-03-20 03:04:17,773 - INFO - Casted transaction_date column to date format
2025-03-20 03:04:17,801 - INFO - Casted transaction_amount column to float
2025-03-20 03:04:19,235 - INFO - Casted transaction_time column to time format
2025-03-20 03:04:19,237 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:04:19,658 - INFO - Closing down clientserver connection
2025-03-20 03:17:53,564 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 03:17:58,066 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 03:17:58,066 - INFO - ===== Start Extracting education_status data =====
2025-03-20 03:17:58,461 - INFO - ===== Success Extracting education_status data =====
2025-03-20 03:17:58,461 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 03:17:58,520 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 03:17:58,520 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 03:17:58,602 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 03:17:58,656 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 03:17:58,688 - INFO - Renamed Columns
2025-03-20 03:17:58,751 - INFO - Removed '$' in balance column
2025-03-20 03:17:58,812 - INFO - Casted balance column to integer
2025-03-20 03:17:58,901 - INFO - Converted duration in year
2025-03-20 03:17:58,934 - INFO - Casted duration into intefer
2025-03-20 03:17:58,936 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 03:17:58,941 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:17:58,980 - INFO -  Selected columns from Bank transaction data 
2025-03-20 03:17:59,003 - INFO -  Renamed Columns 
2025-03-20 03:17:59,049 - INFO -  Mapped Gender Column 
2025-03-20 03:17:59,070 - INFO - Casted account_balance Column into float
2025-03-20 03:17:59,254 - INFO - Casted birth_date Column into date format
2025-03-20 03:17:59,554 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 03:17:59,557 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:18:09,135 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:18:09,160 - INFO -  Select columns from bank_transaction data
2025-03-20 03:18:09,175 - INFO - Renamed columns
2025-03-20 03:18:09,197 - INFO - Casted transaction_date column to date format
2025-03-20 03:18:09,229 - INFO - Casted transaction_amount column to float
2025-03-20 03:18:10,643 - INFO - Casted transaction_time column to time format
2025-03-20 03:18:10,645 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:18:10,646 - INFO - Closing down clientserver connection
2025-03-20 03:34:40,416 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 03:34:44,915 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 03:34:44,915 - INFO - ===== Start Extracting education_status data =====
2025-03-20 03:34:45,263 - INFO - ===== Success Extracting education_status data =====
2025-03-20 03:34:45,263 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 03:34:45,316 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 03:34:45,316 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 03:34:45,398 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 03:34:45,445 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 03:34:45,495 - INFO - Renamed Columns
2025-03-20 03:34:45,559 - INFO - Removed '$' in balance column
2025-03-20 03:34:45,600 - INFO - Casted balance column to integer
2025-03-20 03:34:45,693 - INFO - Converted duration in year
2025-03-20 03:34:45,721 - INFO - Casted duration into intefer
2025-03-20 03:34:45,722 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 03:34:45,728 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:34:45,756 - INFO -  Selected columns from Bank transaction data 
2025-03-20 03:34:45,774 - INFO -  Renamed Columns 
2025-03-20 03:34:45,824 - INFO -  Mapped Gender Column 
2025-03-20 03:34:45,853 - INFO - Casted account_balance Column into float
2025-03-20 03:34:46,028 - INFO - Casted birth_date Column into date format
2025-03-20 03:34:46,347 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 03:34:46,351 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:34:46,353 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:34:46,377 - INFO -  Select columns from bank_transaction data
2025-03-20 03:34:46,388 - INFO - Renamed columns
2025-03-20 03:34:46,405 - INFO - Casted transaction_date column to date format
2025-03-20 03:34:46,434 - INFO - Casted transaction_amount column to float
2025-03-20 03:34:47,965 - INFO - Casted transaction_time column to time format
2025-03-20 03:34:47,966 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 03:34:47,966 - INFO - Closing down clientserver connection
2025-03-20 12:43:15,106 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 12:43:19,619 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 12:43:19,620 - INFO - ===== Start Extracting education_status data =====
2025-03-20 12:43:19,943 - INFO - ===== Success Extracting education_status data =====
2025-03-20 12:43:19,943 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 12:43:19,998 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 12:43:19,999 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 12:43:20,078 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 12:43:20,118 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 12:43:20,148 - INFO - Renamed Columns
2025-03-20 12:43:20,205 - INFO - Removed '$' in balance column
2025-03-20 12:43:20,243 - INFO - Casted balance column to integer
2025-03-20 12:43:20,327 - INFO - Converted duration in year
2025-03-20 12:43:20,359 - INFO - Casted duration into intefer
2025-03-20 12:43:20,362 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 12:43:20,367 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:43:20,399 - INFO -  Selected columns from Bank transaction data 
2025-03-20 12:43:20,414 - INFO -  Renamed Columns 
2025-03-20 12:43:20,449 - INFO -  Mapped Gender Column 
2025-03-20 12:43:20,474 - INFO - Casted account_balance Column into float
2025-03-20 12:43:20,685 - INFO - Casted birth_date Column into date format
2025-03-20 12:43:21,054 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 12:43:21,057 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:43:21,059 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:43:21,079 - INFO -  Select columns from bank_transaction data
2025-03-20 12:43:21,091 - INFO - Renamed columns
2025-03-20 12:43:21,109 - INFO - Casted transaction_date column to date format
2025-03-20 12:43:21,131 - INFO - Casted transaction_amount column to float
2025-03-20 12:43:22,673 - INFO - Casted transaction_time column to time format
2025-03-20 12:43:22,675 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:43:22,675 - INFO - ===== Create connection to dwh =====
2025-03-20 12:43:22,790 - ERROR - ====== Failed to Load Data education_status ======
2025-03-20 12:43:22,791 - ERROR - name 'meta' is not defined
2025-03-20 12:43:22,791 - INFO - ===== Create connection to dwh =====
2025-03-20 12:43:22,805 - ERROR - ====== Failed to Load Data marital_status ======
2025-03-20 12:43:22,805 - ERROR - name 'meta' is not defined
2025-03-20 12:43:22,805 - INFO - ===== Create connection to dwh =====
2025-03-20 12:43:22,820 - ERROR - ====== Failed to Load Data marketing_campaign_deposit ======
2025-03-20 12:43:22,820 - ERROR - name 'meta' is not defined
2025-03-20 12:43:22,820 - INFO - ===== Create connection to dwh =====
2025-03-20 12:43:22,835 - ERROR - ====== Failed to Load Data customers ======
2025-03-20 12:43:22,835 - ERROR - name 'meta' is not defined
2025-03-20 12:43:22,835 - INFO - ===== Create connection to dwh =====
2025-03-20 12:43:22,850 - ERROR - ====== Failed to Load Data transactions ======
2025-03-20 12:43:22,850 - ERROR - name 'meta' is not defined
2025-03-20 12:43:22,851 - INFO - Closing down clientserver connection
2025-03-20 12:45:41,632 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 12:45:46,489 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 12:45:46,489 - INFO - ===== Start Extracting education_status data =====
2025-03-20 12:45:46,857 - INFO - ===== Success Extracting education_status data =====
2025-03-20 12:45:46,857 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 12:45:46,919 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 12:45:46,920 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 12:45:47,004 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 12:45:47,038 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 12:45:47,063 - INFO - Renamed Columns
2025-03-20 12:45:47,121 - INFO - Removed '$' in balance column
2025-03-20 12:45:47,171 - INFO - Casted balance column to integer
2025-03-20 12:45:47,254 - INFO - Converted duration in year
2025-03-20 12:45:47,307 - INFO - Casted duration into intefer
2025-03-20 12:45:47,309 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 12:45:47,314 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:45:47,345 - INFO -  Selected columns from Bank transaction data 
2025-03-20 12:45:47,366 - INFO -  Renamed Columns 
2025-03-20 12:45:47,407 - INFO -  Mapped Gender Column 
2025-03-20 12:45:47,429 - INFO - Casted account_balance Column into float
2025-03-20 12:45:47,625 - INFO - Casted birth_date Column into date format
2025-03-20 12:45:48,005 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 12:45:48,009 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:45:48,011 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:45:48,026 - INFO -  Select columns from bank_transaction data
2025-03-20 12:45:48,041 - INFO - Renamed columns
2025-03-20 12:45:48,057 - INFO - Casted transaction_date column to date format
2025-03-20 12:45:48,082 - INFO - Casted transaction_amount column to float
2025-03-20 12:45:49,834 - INFO - Casted transaction_time column to time format
2025-03-20 12:45:49,835 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:45:49,835 - INFO - ===== Create connection to dwh =====
2025-03-20 12:45:49,939 - ERROR - ====== Failed to Load Data education_status ======
2025-03-20 12:45:49,939 - ERROR - MetaData.__init__() got an unexpected keyword argument 'bind'
2025-03-20 12:45:49,940 - INFO - ===== Create connection to dwh =====
2025-03-20 12:45:49,954 - ERROR - ====== Failed to Load Data marital_status ======
2025-03-20 12:45:49,954 - ERROR - MetaData.__init__() got an unexpected keyword argument 'bind'
2025-03-20 12:45:49,954 - INFO - ===== Create connection to dwh =====
2025-03-20 12:45:49,969 - ERROR - ====== Failed to Load Data marketing_campaign_deposit ======
2025-03-20 12:45:49,969 - ERROR - MetaData.__init__() got an unexpected keyword argument 'bind'
2025-03-20 12:45:49,969 - INFO - ===== Create connection to dwh =====
2025-03-20 12:45:49,985 - ERROR - ====== Failed to Load Data customers ======
2025-03-20 12:45:49,985 - ERROR - MetaData.__init__() got an unexpected keyword argument 'bind'
2025-03-20 12:45:49,985 - INFO - ===== Create connection to dwh =====
2025-03-20 12:45:50,001 - ERROR - ====== Failed to Load Data transactions ======
2025-03-20 12:45:50,001 - ERROR - MetaData.__init__() got an unexpected keyword argument 'bind'
2025-03-20 12:45:50,001 - INFO - Closing down clientserver connection
2025-03-20 12:47:47,822 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 12:47:51,798 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 12:47:51,798 - INFO - ===== Start Extracting education_status data =====
2025-03-20 12:47:52,121 - INFO - ===== Success Extracting education_status data =====
2025-03-20 12:47:52,121 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 12:47:52,182 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 12:47:52,182 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 12:47:52,259 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 12:47:52,294 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 12:47:52,324 - INFO - Renamed Columns
2025-03-20 12:47:52,381 - INFO - Removed '$' in balance column
2025-03-20 12:47:52,422 - INFO - Casted balance column to integer
2025-03-20 12:47:52,502 - INFO - Converted duration in year
2025-03-20 12:47:52,533 - INFO - Casted duration into intefer
2025-03-20 12:47:52,535 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 12:47:52,559 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:47:52,583 - INFO -  Selected columns from Bank transaction data 
2025-03-20 12:47:52,593 - INFO -  Renamed Columns 
2025-03-20 12:47:52,628 - INFO -  Mapped Gender Column 
2025-03-20 12:47:52,649 - INFO - Casted account_balance Column into float
2025-03-20 12:47:52,823 - INFO - Casted birth_date Column into date format
2025-03-20 12:47:53,168 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 12:47:53,172 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:47:53,174 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:47:53,191 - INFO -  Select columns from bank_transaction data
2025-03-20 12:47:53,202 - INFO - Renamed columns
2025-03-20 12:47:53,214 - INFO - Casted transaction_date column to date format
2025-03-20 12:47:53,233 - INFO - Casted transaction_amount column to float
2025-03-20 12:47:54,731 - INFO - Casted transaction_time column to time format
2025-03-20 12:47:54,733 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 12:47:54,733 - INFO - ===== Create connection to dwh =====
2025-03-20 12:49:13,539 - INFO - ===== Connection created =====
2025-03-20 12:49:13,539 - INFO - ===== Start Loading education_status data =====
2025-03-20 12:49:13,553 - ERROR - ====== Failed to Load Data education_status ======
2025-03-20 12:49:13,553 - ERROR - 'function' object is not iterable
2025-03-20 12:49:13,553 - INFO - ===== Create connection to dwh =====
2025-03-20 12:49:13,847 - INFO - ===== Connection created =====
2025-03-20 12:49:13,848 - INFO - ===== Start Loading marital_status data =====
2025-03-20 12:49:13,852 - ERROR - ====== Failed to Load Data marital_status ======
2025-03-20 12:49:13,853 - ERROR - 'function' object is not iterable
2025-03-20 12:49:13,853 - INFO - ===== Create connection to dwh =====
2025-03-20 13:12:45,196 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:12:49,924 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:12:49,924 - INFO - ===== Start Extracting education_status data =====
2025-03-20 13:12:50,334 - INFO - ===== Success Extracting education_status data =====
2025-03-20 13:12:50,335 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 13:12:50,397 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 13:12:50,397 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 13:12:50,491 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 13:12:50,536 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:12:50,591 - INFO - Renamed Columns
2025-03-20 13:12:50,675 - INFO - Removed '$' in balance column
2025-03-20 13:12:50,731 - INFO - Casted balance column to integer
2025-03-20 13:12:50,839 - INFO - Converted duration in year
2025-03-20 13:12:50,879 - INFO - Casted duration into intefer
2025-03-20 13:12:50,881 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:12:50,886 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:12:50,916 - INFO -  Selected columns from Bank transaction data 
2025-03-20 13:12:50,932 - INFO -  Renamed Columns 
2025-03-20 13:12:50,984 - INFO -  Mapped Gender Column 
2025-03-20 13:12:51,004 - INFO - Casted account_balance Column into float
2025-03-20 13:12:51,219 - INFO - Casted birth_date Column into date format
2025-03-20 13:12:51,561 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 13:12:51,564 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:12:51,566 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:12:51,582 - INFO -  Select columns from bank_transaction data
2025-03-20 13:12:51,597 - INFO - Renamed columns
2025-03-20 13:12:51,609 - INFO - Casted transaction_date column to date format
2025-03-20 13:12:51,628 - INFO - Casted transaction_amount column to float
2025-03-20 13:12:53,204 - INFO - Casted transaction_time column to time format
2025-03-20 13:12:53,206 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:12:53,206 - INFO - ===== Create connection to dwh =====
2025-03-20 13:12:53,402 - INFO - ===== Connection created =====
2025-03-20 13:12:53,402 - INFO - ===== Start Loading education_status data =====
2025-03-20 13:12:53,408 - ERROR - ====== Failed to Load Data education_status ======
2025-03-20 13:12:53,408 - ERROR - 'function' object is not iterable
2025-03-20 13:12:53,408 - INFO - Closing down clientserver connection
2025-03-20 13:14:11,927 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:14:16,808 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:14:16,809 - INFO - ===== Start Extracting education_status data =====
2025-03-20 13:14:17,325 - INFO - ===== Success Extracting education_status data =====
2025-03-20 13:14:17,325 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 13:14:17,377 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 13:14:17,378 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 13:14:17,464 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 13:14:17,511 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:14:17,553 - INFO - Renamed Columns
2025-03-20 13:14:17,619 - INFO - Removed '$' in balance column
2025-03-20 13:14:17,678 - INFO - Casted balance column to integer
2025-03-20 13:14:17,769 - INFO - Converted duration in year
2025-03-20 13:14:17,820 - INFO - Casted duration into intefer
2025-03-20 13:14:17,823 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:14:17,827 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:14:17,849 - INFO -  Selected columns from Bank transaction data 
2025-03-20 13:14:17,869 - INFO -  Renamed Columns 
2025-03-20 13:14:17,913 - INFO -  Mapped Gender Column 
2025-03-20 13:14:17,936 - INFO - Casted account_balance Column into float
2025-03-20 13:14:18,150 - INFO - Casted birth_date Column into date format
2025-03-20 13:14:18,583 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 13:14:18,586 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:14:18,588 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:14:18,607 - INFO -  Select columns from bank_transaction data
2025-03-20 13:14:18,622 - INFO - Renamed columns
2025-03-20 13:14:18,643 - INFO - Casted transaction_date column to date format
2025-03-20 13:14:18,669 - INFO - Casted transaction_amount column to float
2025-03-20 13:14:20,354 - INFO - Casted transaction_time column to time format
2025-03-20 13:14:20,355 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:14:20,355 - INFO - ===== Create connection to dwh =====
2025-03-20 13:14:20,587 - ERROR - ====== Failed to Load Data education_status ======
2025-03-20 13:14:20,587 - ERROR - 'function' object has no attribute 'commit'
2025-03-20 13:14:20,587 - INFO - Closing down clientserver connection
2025-03-20 13:15:22,230 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:15:26,803 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:15:26,803 - INFO - ===== Start Extracting education_status data =====
2025-03-20 13:15:27,240 - INFO - ===== Success Extracting education_status data =====
2025-03-20 13:15:27,240 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 13:15:27,307 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 13:15:27,308 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 13:15:27,400 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 13:15:27,428 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:15:27,455 - INFO - Renamed Columns
2025-03-20 13:15:27,503 - INFO - Removed '$' in balance column
2025-03-20 13:15:27,538 - INFO - Casted balance column to integer
2025-03-20 13:15:27,641 - INFO - Converted duration in year
2025-03-20 13:15:27,689 - INFO - Casted duration into intefer
2025-03-20 13:15:27,692 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:15:27,696 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:15:27,717 - INFO -  Selected columns from Bank transaction data 
2025-03-20 13:15:27,741 - INFO -  Renamed Columns 
2025-03-20 13:15:27,792 - INFO -  Mapped Gender Column 
2025-03-20 13:15:27,822 - INFO - Casted account_balance Column into float
2025-03-20 13:15:28,034 - INFO - Casted birth_date Column into date format
2025-03-20 13:15:28,364 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 13:15:28,368 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:15:28,370 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:15:28,382 - INFO -  Select columns from bank_transaction data
2025-03-20 13:15:28,393 - INFO - Renamed columns
2025-03-20 13:15:28,406 - INFO - Casted transaction_date column to date format
2025-03-20 13:15:28,428 - INFO - Casted transaction_amount column to float
2025-03-20 13:15:29,933 - INFO - Casted transaction_time column to time format
2025-03-20 13:15:29,934 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:15:29,934 - INFO - ===== Create connection to dwh =====
2025-03-20 13:15:30,141 - INFO - ===== Connection created =====
2025-03-20 13:15:30,141 - INFO - ===== Start Loading education_status data =====
2025-03-20 13:15:30,146 - ERROR - ====== Failed to Load Data education_status ======
2025-03-20 13:15:30,146 - ERROR - 'function' object is not iterable
2025-03-20 13:15:30,147 - INFO - Closing down clientserver connection
2025-03-20 13:18:37,265 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:18:42,114 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:18:42,115 - INFO - ===== Start Extracting education_status data =====
2025-03-20 13:18:42,533 - INFO - ===== Success Extracting education_status data =====
2025-03-20 13:18:42,534 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 13:18:42,592 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 13:18:42,592 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 13:18:42,684 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 13:18:42,733 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:18:42,761 - INFO - Renamed Columns
2025-03-20 13:18:42,828 - INFO - Removed '$' in balance column
2025-03-20 13:18:42,876 - INFO - Casted balance column to integer
2025-03-20 13:18:42,969 - INFO - Converted duration in year
2025-03-20 13:18:43,013 - INFO - Casted duration into intefer
2025-03-20 13:18:43,016 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:18:43,019 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:18:43,042 - INFO -  Selected columns from Bank transaction data 
2025-03-20 13:18:43,054 - INFO -  Renamed Columns 
2025-03-20 13:18:43,100 - INFO -  Mapped Gender Column 
2025-03-20 13:18:43,132 - INFO - Casted account_balance Column into float
2025-03-20 13:18:43,345 - INFO - Casted birth_date Column into date format
2025-03-20 13:18:43,723 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 13:18:43,726 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:18:43,727 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:18:43,747 - INFO -  Select columns from bank_transaction data
2025-03-20 13:18:43,763 - INFO - Renamed columns
2025-03-20 13:18:43,778 - INFO - Casted transaction_date column to date format
2025-03-20 13:18:43,812 - INFO - Casted transaction_amount column to float
2025-03-20 13:18:45,441 - INFO - Casted transaction_time column to time format
2025-03-20 13:18:45,445 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:18:45,446 - INFO - ===== Create connection to dwh =====
2025-03-20 13:18:45,664 - INFO - ===== Connection created =====
2025-03-20 13:18:45,664 - INFO - ===== Start Loading education_status data =====
2025-03-20 13:18:45,807 - ERROR - ====== Failed to Load Data education_status ======
2025-03-20 13:18:45,807 - ERROR - An error occurred while calling o222.jdbc.
: org.postgresql.util.PSQLException: FATAL: database "warehouse" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2825)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:175)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:313)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:49)
	at org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:160)
	at org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:156)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:50)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-20 13:18:45,809 - INFO - Closing down clientserver connection
2025-03-20 13:21:21,383 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:21:25,740 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:21:25,740 - INFO - ===== Start Extracting education_status data =====
2025-03-20 13:21:26,103 - INFO - ===== Success Extracting education_status data =====
2025-03-20 13:21:26,103 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 13:21:26,140 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 13:21:26,140 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 13:21:26,210 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 13:21:26,229 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:21:26,257 - INFO - Renamed Columns
2025-03-20 13:21:26,294 - INFO - Removed '$' in balance column
2025-03-20 13:21:26,321 - INFO - Casted balance column to integer
2025-03-20 13:21:26,383 - INFO - Converted duration in year
2025-03-20 13:21:26,416 - INFO - Casted duration into intefer
2025-03-20 13:21:26,418 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:21:26,422 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:21:26,450 - INFO -  Selected columns from Bank transaction data 
2025-03-20 13:21:26,463 - INFO -  Renamed Columns 
2025-03-20 13:21:26,509 - INFO -  Mapped Gender Column 
2025-03-20 13:21:26,526 - INFO - Casted account_balance Column into float
2025-03-20 13:21:26,695 - INFO - Casted birth_date Column into date format
2025-03-20 13:21:27,018 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 13:21:27,021 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:21:27,023 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:21:27,035 - INFO -  Select columns from bank_transaction data
2025-03-20 13:21:27,046 - INFO - Renamed columns
2025-03-20 13:21:27,058 - INFO - Casted transaction_date column to date format
2025-03-20 13:21:27,078 - INFO - Casted transaction_amount column to float
2025-03-20 13:21:28,667 - INFO - Casted transaction_time column to time format
2025-03-20 13:21:28,670 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:21:28,671 - INFO - ===== Create connection to dwh =====
2025-03-20 13:21:28,913 - INFO - ===== Connection created =====
2025-03-20 13:21:28,914 - INFO - ===== Start Loading education_status data =====
2025-03-20 13:21:29,365 - INFO - ===== Success Loading education_status data =====
2025-03-20 13:21:29,365 - INFO - Closing down clientserver connection
2025-03-20 13:22:25,770 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:22:30,361 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:22:30,361 - INFO - ===== Start Extracting education_status data =====
2025-03-20 13:22:30,673 - INFO - ===== Success Extracting education_status data =====
2025-03-20 13:22:30,673 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 13:22:30,736 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 13:22:30,736 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 13:22:30,813 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 13:22:30,843 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:22:30,872 - INFO - Renamed Columns
2025-03-20 13:22:30,915 - INFO - Removed '$' in balance column
2025-03-20 13:22:30,944 - INFO - Casted balance column to integer
2025-03-20 13:22:31,014 - INFO - Converted duration in year
2025-03-20 13:22:31,044 - INFO - Casted duration into intefer
2025-03-20 13:22:31,046 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:22:31,050 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:22:31,069 - INFO -  Selected columns from Bank transaction data 
2025-03-20 13:22:31,083 - INFO -  Renamed Columns 
2025-03-20 13:22:31,120 - INFO -  Mapped Gender Column 
2025-03-20 13:22:31,139 - INFO - Casted account_balance Column into float
2025-03-20 13:22:31,326 - INFO - Casted birth_date Column into date format
2025-03-20 13:22:31,671 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 13:22:31,675 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:22:31,677 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:22:31,687 - INFO -  Select columns from bank_transaction data
2025-03-20 13:22:31,701 - INFO - Renamed columns
2025-03-20 13:22:31,715 - INFO - Casted transaction_date column to date format
2025-03-20 13:22:31,746 - INFO - Casted transaction_amount column to float
2025-03-20 13:22:33,129 - INFO - Casted transaction_time column to time format
2025-03-20 13:22:33,130 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:22:33,130 - INFO - ===== Create connection to dwh =====
2025-03-20 13:22:33,330 - INFO - ===== Connection created =====
2025-03-20 13:22:33,330 - INFO - ===== Start Loading education_status data =====
2025-03-20 13:23:57,728 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>
2025-03-20 13:23:57,730 - INFO - Closing down clientserver connection
2025-03-20 13:23:57,730 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-20 13:23:57,734 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-20 13:23:57,757 - INFO - Closing down clientserver connection
2025-03-20 13:23:57,757 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-20 13:23:57,759 - INFO - Closing down clientserver connection
2025-03-20 13:23:57,759 - ERROR - ====== Failed to Load Data education_status ======
2025-03-20 13:23:57,759 - ERROR - An error occurred while calling o222.jdbc
2025-03-20 13:23:57,759 - INFO - ===== Create connection to dwh =====
2025-03-20 13:23:57,889 - INFO - ===== Connection created =====
2025-03-20 13:23:57,889 - INFO - ===== Start Loading marital_status data =====
2025-03-20 13:23:58,136 - INFO - ===== Success Loading marital_status data =====
2025-03-20 13:23:58,136 - INFO - ===== Create connection to dwh =====
2025-03-20 13:23:58,236 - INFO - ===== Connection created =====
2025-03-20 13:23:58,236 - INFO - ===== Start Loading marketing_campaign_deposit data =====
2025-03-20 13:24:00,969 - INFO - ===== Success Loading marketing_campaign_deposit data =====
2025-03-20 13:24:00,970 - INFO - ===== Create connection to dwh =====
2025-03-20 13:24:30,916 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:24:35,275 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:24:35,276 - INFO - ===== Start Extracting education_status data =====
2025-03-20 13:24:35,656 - INFO - ===== Success Extracting education_status data =====
2025-03-20 13:24:35,657 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 13:24:35,720 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 13:24:35,721 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 13:24:35,802 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 13:24:35,843 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:24:35,879 - INFO - Renamed Columns
2025-03-20 13:24:35,931 - INFO - Removed '$' in balance column
2025-03-20 13:24:35,964 - INFO - Casted balance column to integer
2025-03-20 13:24:36,046 - INFO - Converted duration in year
2025-03-20 13:24:36,093 - INFO - Casted duration into intefer
2025-03-20 13:24:36,095 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:24:36,099 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:24:36,130 - INFO -  Selected columns from Bank transaction data 
2025-03-20 13:24:36,142 - INFO -  Renamed Columns 
2025-03-20 13:24:36,192 - INFO -  Mapped Gender Column 
2025-03-20 13:24:36,213 - INFO - Casted account_balance Column into float
2025-03-20 13:24:36,418 - INFO - Casted birth_date Column into date format
2025-03-20 13:24:36,734 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 13:24:36,736 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:24:36,738 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:24:36,755 - INFO -  Select columns from bank_transaction data
2025-03-20 13:24:36,767 - INFO - Renamed columns
2025-03-20 13:24:36,786 - INFO - Casted transaction_date column to date format
2025-03-20 13:24:36,810 - INFO - Casted transaction_amount column to float
2025-03-20 13:24:38,319 - INFO - Casted transaction_time column to time format
2025-03-20 13:24:38,320 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:24:38,321 - INFO - ===== Create connection to dwh =====
2025-03-20 13:24:38,587 - INFO - ===== Connection created =====
2025-03-20 13:24:38,587 - INFO - ===== Start Loading education_status data =====
2025-03-20 13:26:14,241 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>
2025-03-20 13:26:14,242 - INFO - Closing down clientserver connection
2025-03-20 13:26:14,242 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-20 13:26:14,246 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-20 13:26:14,249 - INFO - Closing down clientserver connection
2025-03-20 13:26:14,249 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-20 13:26:14,250 - INFO - Closing down clientserver connection
2025-03-20 13:26:14,250 - ERROR - ====== Failed to Load Data education_status ======
2025-03-20 13:26:14,250 - ERROR - An error occurred while calling o222.jdbc
2025-03-20 13:26:14,250 - INFO - ===== Create connection to dwh =====
2025-03-20 13:26:14,484 - INFO - ===== Connection created =====
2025-03-20 13:26:14,484 - INFO - ===== Start Loading marital_status data =====
2025-03-20 13:29:01,235 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=13>
2025-03-20 13:29:01,236 - INFO - Closing down clientserver connection
2025-03-20 13:29:01,236 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=13>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-20 13:29:01,237 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-20 13:29:01,238 - INFO - Closing down clientserver connection
2025-03-20 13:29:01,238 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-20 13:29:01,239 - INFO - Closing down clientserver connection
2025-03-20 13:29:01,239 - ERROR - ====== Failed to Load Data marital_status ======
2025-03-20 13:29:01,239 - ERROR - An error occurred while calling o225.jdbc
2025-03-20 13:29:01,239 - INFO - ===== Create connection to dwh =====
2025-03-20 13:30:21,562 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:30:25,952 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-20 13:30:25,952 - INFO - ===== Start Extracting education_status data =====
2025-03-20 13:30:26,349 - INFO - ===== Success Extracting education_status data =====
2025-03-20 13:30:26,349 - INFO - ===== Start Extracting marital_status data =====
2025-03-20 13:30:26,411 - INFO - ===== Success Extracting marital_status data =====
2025-03-20 13:30:26,411 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-20 13:30:26,480 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-20 13:30:26,515 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:30:26,541 - INFO - Renamed Columns
2025-03-20 13:30:26,607 - INFO - Removed '$' in balance column
2025-03-20 13:30:26,664 - INFO - Casted balance column to integer
2025-03-20 13:30:26,740 - INFO - Converted duration in year
2025-03-20 13:30:26,774 - INFO - Casted duration into intefer
2025-03-20 13:30:26,777 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-20 13:30:26,781 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:30:26,808 - INFO -  Selected columns from Bank transaction data 
2025-03-20 13:30:26,825 - INFO -  Renamed Columns 
2025-03-20 13:30:26,859 - INFO -  Mapped Gender Column 
2025-03-20 13:30:26,882 - INFO - Casted account_balance Column into float
2025-03-20 13:30:27,082 - INFO - Casted birth_date Column into date format
2025-03-20 13:30:27,440 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-20 13:30:27,443 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:30:27,444 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:30:27,461 - INFO -  Select columns from bank_transaction data
2025-03-20 13:30:27,477 - INFO - Renamed columns
2025-03-20 13:30:27,494 - INFO - Casted transaction_date column to date format
2025-03-20 13:30:27,520 - INFO - Casted transaction_amount column to float
2025-03-20 13:30:29,024 - INFO - Casted transaction_time column to time format
2025-03-20 13:30:29,025 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-20 13:30:29,026 - INFO - ===== Create connection to dwh =====
2025-03-20 13:30:29,269 - INFO - ===== Connection created =====
2025-03-21 01:32:29,902 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 01:32:35,362 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 01:32:35,363 - INFO - ===== Start Extracting education_status data =====
2025-03-21 01:32:35,890 - INFO - ===== Success Extracting education_status data =====
2025-03-21 01:32:35,890 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 01:32:35,952 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 01:32:35,953 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 01:32:36,031 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 01:32:36,083 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 01:32:36,129 - INFO - Renamed Columns
2025-03-21 01:32:36,189 - INFO - Removed '$' in balance column
2025-03-21 01:32:36,236 - INFO - Casted balance column to integer
2025-03-21 01:32:36,320 - INFO - Converted duration in year
2025-03-21 01:32:36,362 - INFO - Casted duration into intefer
2025-03-21 01:32:36,363 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 01:32:36,368 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:32:36,402 - INFO -  Selected columns from Bank transaction data 
2025-03-21 01:32:36,427 - INFO -  Renamed Columns 
2025-03-21 01:32:36,462 - INFO -  Mapped Gender Column 
2025-03-21 01:32:36,480 - INFO - Casted account_balance Column into float
2025-03-21 01:32:36,677 - INFO - Casted birth_date Column into date format
2025-03-21 01:32:37,092 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 01:32:37,096 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:32:37,098 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:32:37,121 - INFO -  Select columns from bank_transaction data
2025-03-21 01:32:37,139 - INFO - Renamed columns
2025-03-21 01:32:37,154 - INFO - Casted transaction_date column to date format
2025-03-21 01:32:37,178 - INFO - Casted transaction_amount column to float
2025-03-21 01:32:38,820 - INFO - Casted transaction_time column to time format
2025-03-21 01:32:38,822 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:32:38,822 - INFO - ===== Create connection to dwh =====
2025-03-21 01:32:39,075 - INFO - ===== Connection created =====
2025-03-21 01:32:39,078 - INFO - ===== Truncate education_status data =====
2025-03-21 01:32:39,078 - INFO - ===== Start Loading education_status data =====
2025-03-21 01:32:39,598 - INFO - ===== Success Loading education_status data =====
2025-03-21 01:32:39,598 - INFO - ===== Create connection to dwh =====
2025-03-21 01:32:39,711 - INFO - ===== Connection created =====
2025-03-21 01:32:39,736 - INFO - ===== Truncate marital_status data =====
2025-03-21 01:32:39,736 - INFO - ===== Start Loading marital_status data =====
2025-03-21 01:33:11,921 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>
2025-03-21 01:33:11,923 - INFO - Closing down clientserver connection
2025-03-21 01:33:11,923 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:33:11,927 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 01:33:11,931 - INFO - Closing down clientserver connection
2025-03-21 01:33:11,931 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:33:11,934 - INFO - Closing down clientserver connection
2025-03-21 01:33:11,934 - ERROR - ====== Failed to Load Data marital_status ======
2025-03-21 01:33:11,934 - ERROR - An error occurred while calling o225.jdbc
2025-03-21 01:33:11,934 - INFO - ===== Create connection to dwh =====
2025-03-21 01:33:12,061 - INFO - ===== Connection created =====
2025-03-21 01:33:12,063 - INFO - ===== Truncate marketing_campaign_deposit data =====
2025-03-21 01:33:12,063 - INFO - ===== Start Loading marketing_campaign_deposit data =====
2025-03-21 01:33:16,167 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=15>
2025-03-21 01:33:16,168 - INFO - Closing down clientserver connection
2025-03-21 01:33:16,168 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=15>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:33:16,169 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 01:33:16,169 - INFO - Closing down clientserver connection
2025-03-21 01:33:16,169 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:33:16,170 - INFO - Closing down clientserver connection
2025-03-21 01:33:16,170 - ERROR - ====== Failed to Load Data marketing_campaign_deposit ======
2025-03-21 01:33:16,170 - ERROR - An error occurred while calling o228.jdbc
2025-03-21 01:33:16,171 - INFO - ===== Create connection to dwh =====
2025-03-21 01:33:16,284 - INFO - ===== Connection created =====
2025-03-21 01:33:16,287 - INFO - ===== Truncate customers data =====
2025-03-21 01:33:16,287 - INFO - ===== Start Loading customers data =====
2025-03-21 01:33:17,616 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=17>
2025-03-21 01:33:17,617 - INFO - Closing down clientserver connection
2025-03-21 01:33:17,617 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=17>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:33:17,618 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 01:33:17,619 - INFO - Closing down clientserver connection
2025-03-21 01:33:17,619 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:33:17,620 - INFO - Closing down clientserver connection
2025-03-21 01:33:17,620 - ERROR - ====== Failed to Load Data customers ======
2025-03-21 01:33:17,620 - ERROR - An error occurred while calling o231.jdbc
2025-03-21 01:33:17,621 - INFO - ===== Create connection to dwh =====
2025-03-21 01:33:17,827 - INFO - ===== Connection created =====
2025-03-21 01:33:17,831 - INFO - ===== Truncate transactions data =====
2025-03-21 01:33:17,831 - INFO - ===== Start Loading transactions data =====
2025-03-21 01:33:18,422 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=19>
2025-03-21 01:33:18,425 - INFO - Closing down clientserver connection
2025-03-21 01:33:18,425 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=19>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:33:18,426 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 01:33:18,427 - INFO - Closing down clientserver connection
2025-03-21 01:33:18,427 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:33:18,428 - INFO - Closing down clientserver connection
2025-03-21 01:33:18,428 - ERROR - ====== Failed to Load Data transactions ======
2025-03-21 01:33:18,428 - ERROR - An error occurred while calling o234.jdbc
2025-03-21 01:33:18,429 - INFO - Closing down clientserver connection
2025-03-21 01:34:41,429 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 01:34:46,131 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 01:34:46,131 - INFO - ===== Start Extracting education_status data =====
2025-03-21 01:34:46,529 - INFO - ===== Success Extracting education_status data =====
2025-03-21 01:34:46,529 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 01:34:46,571 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 01:34:46,572 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 01:34:46,646 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 01:34:46,689 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 01:34:46,727 - INFO - Renamed Columns
2025-03-21 01:34:46,794 - INFO - Removed '$' in balance column
2025-03-21 01:34:46,824 - INFO - Casted balance column to integer
2025-03-21 01:34:46,911 - INFO - Converted duration in year
2025-03-21 01:34:46,966 - INFO - Casted duration into intefer
2025-03-21 01:34:46,968 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 01:34:46,974 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:34:47,009 - INFO -  Selected columns from Bank transaction data 
2025-03-21 01:34:47,023 - INFO -  Renamed Columns 
2025-03-21 01:34:47,057 - INFO -  Mapped Gender Column 
2025-03-21 01:34:47,075 - INFO - Casted account_balance Column into float
2025-03-21 01:34:47,267 - INFO - Casted birth_date Column into date format
2025-03-21 01:34:47,641 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 01:34:47,644 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:34:47,646 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:34:47,668 - INFO -  Select columns from bank_transaction data
2025-03-21 01:34:47,683 - INFO - Renamed columns
2025-03-21 01:34:47,697 - INFO - Casted transaction_date column to date format
2025-03-21 01:34:47,721 - INFO - Casted transaction_amount column to float
2025-03-21 01:34:49,328 - INFO - Casted transaction_time column to time format
2025-03-21 01:34:49,329 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:34:49,329 - INFO - ===== Create connection to dwh =====
2025-03-21 01:34:49,537 - INFO - ===== Connection created =====
2025-03-21 01:34:49,540 - INFO - ===== Truncate education_status data =====
2025-03-21 01:34:49,540 - INFO - ===== Start Loading education_status data =====
2025-03-21 01:35:22,458 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>
2025-03-21 01:35:22,460 - INFO - Closing down clientserver connection
2025-03-21 01:35:22,460 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:35:22,464 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 01:35:22,469 - INFO - Closing down clientserver connection
2025-03-21 01:35:22,470 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:35:22,471 - INFO - Closing down clientserver connection
2025-03-21 01:35:22,471 - ERROR - ====== Failed to Load Data education_status ======
2025-03-21 01:35:22,471 - ERROR - An error occurred while calling o222.jdbc
2025-03-21 01:35:22,472 - INFO - ===== Create connection to dwh =====
2025-03-21 01:35:22,654 - INFO - ===== Connection created =====
2025-03-21 01:35:22,658 - INFO - ===== Truncate marital_status data =====
2025-03-21 01:35:22,658 - INFO - ===== Start Loading marital_status data =====
2025-03-21 01:35:22,955 - INFO - ===== Success Loading marital_status data =====
2025-03-21 01:35:22,955 - INFO - ===== Create connection to dwh =====
2025-03-21 01:35:23,073 - INFO - ===== Connection created =====
2025-03-21 01:35:23,075 - INFO - ===== Truncate marketing_campaign_deposit data =====
2025-03-21 01:35:23,075 - INFO - ===== Start Loading marketing_campaign_deposit data =====
2025-03-21 01:35:26,056 - INFO - ===== Success Loading marketing_campaign_deposit data =====
2025-03-21 01:35:26,056 - INFO - ===== Create connection to dwh =====
2025-03-21 01:35:26,173 - INFO - ===== Connection created =====
2025-03-21 01:35:26,175 - INFO - ===== Truncate customers data =====
2025-03-21 01:35:26,175 - INFO - ===== Start Loading customers data =====
2025-03-21 01:35:46,990 - INFO - ===== Success Loading customers data =====
2025-03-21 01:35:46,990 - INFO - ===== Create connection to dwh =====
2025-03-21 01:35:47,076 - INFO - ===== Connection created =====
2025-03-21 01:35:47,077 - INFO - ===== Truncate transactions data =====
2025-03-21 01:35:47,077 - INFO - ===== Start Loading transactions data =====
2025-03-21 01:36:04,851 - INFO - ===== Success Loading transactions data =====
2025-03-21 01:36:04,852 - INFO - Closing down clientserver connection
2025-03-21 01:38:54,563 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 01:38:59,233 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 01:38:59,233 - INFO - ===== Start Extracting education_status data =====
2025-03-21 01:38:59,543 - INFO - ===== Success Extracting education_status data =====
2025-03-21 01:38:59,543 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 01:38:59,586 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 01:38:59,586 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 01:38:59,655 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 01:38:59,676 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 01:38:59,699 - INFO - Renamed Columns
2025-03-21 01:38:59,741 - INFO - Removed '$' in balance column
2025-03-21 01:38:59,788 - INFO - Casted balance column to integer
2025-03-21 01:38:59,858 - INFO - Converted duration in year
2025-03-21 01:38:59,891 - INFO - Casted duration into intefer
2025-03-21 01:38:59,893 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 01:38:59,896 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:38:59,918 - INFO -  Selected columns from Bank transaction data 
2025-03-21 01:38:59,935 - INFO -  Renamed Columns 
2025-03-21 01:38:59,973 - INFO -  Mapped Gender Column 
2025-03-21 01:38:59,995 - INFO - Casted account_balance Column into float
2025-03-21 01:39:00,186 - INFO - Casted birth_date Column into date format
2025-03-21 01:39:00,469 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 01:39:00,472 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:39:00,474 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:39:00,488 - INFO -  Select columns from bank_transaction data
2025-03-21 01:39:00,502 - INFO - Renamed columns
2025-03-21 01:39:00,516 - INFO - Casted transaction_date column to date format
2025-03-21 01:39:00,534 - INFO - Casted transaction_amount column to float
2025-03-21 01:39:01,975 - INFO - Casted transaction_time column to time format
2025-03-21 01:39:01,977 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:39:01,977 - INFO - ===== Create connection to dwh =====
2025-03-21 01:39:02,154 - INFO - ===== Connection created =====
2025-03-21 01:39:02,155 - INFO - ===== Truncate education_status data =====
2025-03-21 01:39:02,155 - INFO - ===== Start Loading education_status data =====
2025-03-21 01:39:02,545 - INFO - ===== Success Loading education_status data =====
2025-03-21 01:39:02,545 - INFO - ===== Create connection to dwh =====
2025-03-21 01:39:02,636 - INFO - ===== Connection created =====
2025-03-21 01:39:02,639 - INFO - ===== Truncate marital_status data =====
2025-03-21 01:39:02,639 - INFO - ===== Start Loading marital_status data =====
2025-03-21 01:40:00,329 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>
2025-03-21 01:40:00,331 - INFO - Closing down clientserver connection
2025-03-21 01:40:00,331 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:40:00,335 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 01:40:00,336 - INFO - Closing down clientserver connection
2025-03-21 01:40:00,336 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:40:00,338 - INFO - Closing down clientserver connection
2025-03-21 01:40:00,338 - ERROR - ====== Failed to Load Data marital_status ======
2025-03-21 01:40:00,338 - ERROR - An error occurred while calling o225.jdbc
2025-03-21 01:40:00,338 - INFO - ===== Create connection to dwh =====
2025-03-21 01:40:00,443 - INFO - ===== Connection created =====
2025-03-21 01:40:00,444 - INFO - ===== Truncate marketing_campaign_deposit data =====
2025-03-21 01:40:00,444 - INFO - ===== Start Loading marketing_campaign_deposit data =====
2025-03-21 01:40:02,258 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=15>
2025-03-21 01:40:02,259 - INFO - Closing down clientserver connection
2025-03-21 01:40:02,259 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=15>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:40:02,260 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 01:40:02,261 - INFO - Closing down clientserver connection
2025-03-21 01:40:02,261 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 01:40:02,262 - INFO - Closing down clientserver connection
2025-03-21 01:40:02,262 - ERROR - ====== Failed to Load Data marketing_campaign_deposit ======
2025-03-21 01:40:02,262 - ERROR - An error occurred while calling o228.jdbc
2025-03-21 01:40:02,263 - INFO - ===== Create connection to dwh =====
2025-03-21 01:40:02,387 - INFO - ===== Connection created =====
2025-03-21 01:43:23,178 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 01:43:28,105 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 01:43:28,106 - INFO - ===== Start Extracting education_status data =====
2025-03-21 01:43:28,541 - INFO - ===== Success Extracting education_status data =====
2025-03-21 01:43:28,541 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 01:43:28,611 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 01:43:28,611 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 01:43:28,706 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 01:43:28,740 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 01:43:28,773 - INFO - Renamed Columns
2025-03-21 01:43:28,843 - INFO - Removed '$' in balance column
2025-03-21 01:43:28,903 - INFO - Casted balance column to integer
2025-03-21 01:43:28,992 - INFO - Converted duration in year
2025-03-21 01:43:29,026 - INFO - Casted duration into intefer
2025-03-21 01:43:29,029 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 01:43:29,034 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:43:29,064 - INFO -  Selected columns from Bank transaction data 
2025-03-21 01:43:29,076 - INFO -  Renamed Columns 
2025-03-21 01:43:29,115 - INFO -  Mapped Gender Column 
2025-03-21 01:43:29,141 - INFO - Casted account_balance Column into float
2025-03-21 01:43:29,367 - INFO - Casted birth_date Column into date format
2025-03-21 01:43:29,784 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 01:43:29,789 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:43:29,791 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:43:29,812 - INFO -  Select columns from bank_transaction data
2025-03-21 01:43:29,833 - INFO - Renamed columns
2025-03-21 01:43:29,854 - INFO - Casted transaction_date column to date format
2025-03-21 01:43:29,880 - INFO - Casted transaction_amount column to float
2025-03-21 01:43:31,650 - INFO - Casted transaction_time column to time format
2025-03-21 01:43:31,653 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 01:43:31,653 - INFO - ===== Create connection to dwh =====
2025-03-21 01:43:31,844 - INFO - ===== Connection created =====
2025-03-21 01:43:31,846 - INFO - ===== Truncate education_status data =====
2025-03-21 01:43:31,846 - INFO - ===== Start Loading education_status data =====
2025-03-21 01:43:32,264 - INFO - ===== Success Loading education_status data =====
2025-03-21 01:43:32,264 - INFO - ===== Create connection to dwh =====
2025-03-21 01:43:32,362 - INFO - ===== Connection created =====
2025-03-21 02:01:52,804 - INFO - Closing down clientserver connection
2025-03-21 02:01:52,804 - INFO - Closing down clientserver connection
2025-03-21 02:01:52,928 - ERROR - Exception during reset or similar
Traceback (most recent call last):
  File "/opt/conda/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 988, in _finalize_fairy
    fairy._reset(
  File "/opt/conda/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1438, in _reset
    pool._dialect.do_rollback(self)
  File "/opt/conda/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 692, in do_rollback
    dbapi_connection.rollback()
psycopg2.OperationalError: server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

2025-03-21 02:01:52,938 - ERROR - Exception during reset or similar
Traceback (most recent call last):
  File "/opt/conda/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 988, in _finalize_fairy
    fairy._reset(
  File "/opt/conda/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1438, in _reset
    pool._dialect.do_rollback(self)
  File "/opt/conda/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 692, in do_rollback
    dbapi_connection.rollback()
psycopg2.OperationalError: server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

2025-03-21 02:03:40,576 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:03:45,325 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:03:45,326 - INFO - ===== Start Extracting education_status data =====
2025-03-21 02:03:45,706 - INFO - ===== Success Extracting education_status data =====
2025-03-21 02:03:45,707 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 02:03:45,763 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 02:03:45,763 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 02:03:45,856 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 02:03:45,902 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:03:45,933 - INFO - Renamed Columns
2025-03-21 02:03:46,008 - INFO - Removed '$' in balance column
2025-03-21 02:03:46,055 - INFO - Casted balance column to integer
2025-03-21 02:03:46,149 - INFO - Converted duration in year
2025-03-21 02:03:46,194 - INFO - Casted duration into intefer
2025-03-21 02:03:46,197 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:03:46,202 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:03:46,237 - INFO -  Selected columns from Bank transaction data 
2025-03-21 02:03:46,251 - INFO -  Renamed Columns 
2025-03-21 02:03:46,281 - INFO -  Mapped Gender Column 
2025-03-21 02:03:46,304 - INFO - Casted account_balance Column into float
2025-03-21 02:03:46,485 - INFO - Casted birth_date Column into date format
2025-03-21 02:03:46,870 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 02:03:46,875 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:03:46,877 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:03:46,896 - INFO -  Select columns from bank_transaction data
2025-03-21 02:03:46,908 - INFO - Renamed columns
2025-03-21 02:03:46,929 - INFO - Casted transaction_date column to date format
2025-03-21 02:03:46,960 - INFO - Casted transaction_amount column to float
2025-03-21 02:03:48,548 - INFO - Casted transaction_time column to time format
2025-03-21 02:03:48,549 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:03:48,550 - INFO - ===== Create connection to dwh =====
2025-03-21 02:03:48,753 - INFO - ===== Connection created =====
2025-03-21 02:03:48,755 - INFO - ===== Truncate education_status data =====
2025-03-21 02:03:48,755 - INFO - ===== Start Loading education_status data =====
2025-03-21 02:03:49,198 - INFO - ===== Success Loading education_status data =====
2025-03-21 02:03:49,199 - INFO - Closing down clientserver connection
2025-03-21 02:06:33,421 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:06:37,951 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:06:37,951 - INFO - ===== Start Extracting education_status data =====
2025-03-21 02:06:38,341 - INFO - ===== Success Extracting education_status data =====
2025-03-21 02:06:38,341 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 02:06:38,391 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 02:06:38,392 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 02:06:38,474 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 02:06:38,508 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:06:38,548 - INFO - Renamed Columns
2025-03-21 02:06:38,598 - INFO - Removed '$' in balance column
2025-03-21 02:06:38,641 - INFO - Casted balance column to integer
2025-03-21 02:06:38,715 - INFO - Converted duration in year
2025-03-21 02:06:38,755 - INFO - Casted duration into intefer
2025-03-21 02:06:38,756 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:06:38,762 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:06:38,791 - INFO -  Selected columns from Bank transaction data 
2025-03-21 02:06:38,814 - INFO -  Renamed Columns 
2025-03-21 02:06:38,858 - INFO -  Mapped Gender Column 
2025-03-21 02:06:38,882 - INFO - Casted account_balance Column into float
2025-03-21 02:06:39,074 - INFO - Casted birth_date Column into date format
2025-03-21 02:06:39,475 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 02:06:39,480 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:06:39,482 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:06:39,504 - INFO -  Select columns from bank_transaction data
2025-03-21 02:06:39,521 - INFO - Renamed columns
2025-03-21 02:06:39,538 - INFO - Casted transaction_date column to date format
2025-03-21 02:06:39,571 - INFO - Casted transaction_amount column to float
2025-03-21 02:06:41,223 - INFO - Casted transaction_time column to time format
2025-03-21 02:06:41,225 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:06:41,226 - INFO - ===== Create connection to dwh =====
2025-03-21 02:06:41,449 - INFO - ===== Connection created =====
2025-03-21 02:06:41,452 - INFO - ===== Truncate education_status data =====
2025-03-21 02:06:41,452 - INFO - ===== Start Loading education_status data =====
2025-03-21 02:06:41,884 - INFO - ===== Success Loading education_status data =====
2025-03-21 02:06:41,885 - INFO - Closing down clientserver connection
2025-03-21 02:09:38,150 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:09:42,859 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:09:42,860 - INFO - ===== Start Extracting education_status data =====
2025-03-21 02:09:43,287 - INFO - ===== Success Extracting education_status data =====
2025-03-21 02:09:43,288 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 02:09:43,357 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 02:09:43,358 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 02:09:43,451 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 02:09:43,493 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:09:43,526 - INFO - Renamed Columns
2025-03-21 02:09:43,584 - INFO - Removed '$' in balance column
2025-03-21 02:09:43,642 - INFO - Casted balance column to integer
2025-03-21 02:09:43,722 - INFO - Converted duration in year
2025-03-21 02:09:43,762 - INFO - Casted duration into intefer
2025-03-21 02:09:43,764 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:09:43,769 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:09:43,807 - INFO -  Selected columns from Bank transaction data 
2025-03-21 02:09:43,821 - INFO -  Renamed Columns 
2025-03-21 02:09:43,854 - INFO -  Mapped Gender Column 
2025-03-21 02:09:43,877 - INFO - Casted account_balance Column into float
2025-03-21 02:09:44,096 - INFO - Casted birth_date Column into date format
2025-03-21 02:09:44,506 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 02:09:44,510 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:09:44,511 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:09:44,533 - INFO -  Select columns from bank_transaction data
2025-03-21 02:09:44,552 - INFO - Renamed columns
2025-03-21 02:09:44,567 - INFO - Casted transaction_date column to date format
2025-03-21 02:09:44,591 - INFO - Casted transaction_amount column to float
2025-03-21 02:09:46,201 - INFO - Casted transaction_time column to time format
2025-03-21 02:09:46,202 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:09:46,202 - INFO - ===== Create connection to dwh =====
2025-03-21 02:13:09,463 - INFO - Closing down clientserver connection
2025-03-21 02:18:01,538 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:18:06,242 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:18:06,242 - INFO - ===== Start Extracting education_status data =====
2025-03-21 02:18:06,711 - INFO - ===== Success Extracting education_status data =====
2025-03-21 02:18:06,711 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 02:18:06,774 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 02:18:06,774 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 02:18:06,858 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 02:18:06,921 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:18:06,951 - INFO - Renamed Columns
2025-03-21 02:18:07,014 - INFO - Removed '$' in balance column
2025-03-21 02:18:07,068 - INFO - Casted balance column to integer
2025-03-21 02:18:07,162 - INFO - Converted duration in year
2025-03-21 02:18:07,208 - INFO - Casted duration into intefer
2025-03-21 02:18:07,211 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:18:07,217 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:18:07,256 - INFO -  Selected columns from Bank transaction data 
2025-03-21 02:18:07,277 - INFO -  Renamed Columns 
2025-03-21 02:18:07,322 - INFO -  Mapped Gender Column 
2025-03-21 02:18:07,351 - INFO - Casted account_balance Column into float
2025-03-21 02:18:07,552 - INFO - Casted birth_date Column into date format
2025-03-21 02:18:07,913 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 02:18:07,916 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:18:07,918 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:18:07,937 - INFO -  Select columns from bank_transaction data
2025-03-21 02:18:07,951 - INFO - Renamed columns
2025-03-21 02:18:07,967 - INFO - Casted transaction_date column to date format
2025-03-21 02:18:08,001 - INFO - Casted transaction_amount column to float
2025-03-21 02:18:09,764 - INFO - Casted transaction_time column to time format
2025-03-21 02:18:09,766 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:18:09,766 - INFO - ===== Create connection to dwh =====
2025-03-21 02:18:09,999 - INFO - ===== Connection created =====
2025-03-21 02:18:10,013 - INFO - ===== Truncate education_status data =====
2025-03-21 02:18:10,013 - INFO - ===== Start Loading education_status data =====
2025-03-21 02:18:10,539 - INFO - ===== Success Loading education_status data =====
2025-03-21 02:18:10,540 - INFO - Closing down clientserver connection
2025-03-21 02:21:45,125 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:21:50,018 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:21:50,019 - INFO - ===== Start Extracting education_status data =====
2025-03-21 02:21:50,434 - INFO - ===== Success Extracting education_status data =====
2025-03-21 02:21:50,435 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 02:21:50,503 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 02:21:50,504 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 02:21:50,591 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 02:21:50,627 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:21:50,657 - INFO - Renamed Columns
2025-03-21 02:21:50,712 - INFO - Removed '$' in balance column
2025-03-21 02:21:50,759 - INFO - Casted balance column to integer
2025-03-21 02:21:50,845 - INFO - Converted duration in year
2025-03-21 02:21:50,881 - INFO - Casted duration into intefer
2025-03-21 02:21:50,884 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:21:50,890 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:21:50,916 - INFO -  Selected columns from Bank transaction data 
2025-03-21 02:21:50,934 - INFO -  Renamed Columns 
2025-03-21 02:21:50,987 - INFO -  Mapped Gender Column 
2025-03-21 02:21:51,009 - INFO - Casted account_balance Column into float
2025-03-21 02:21:51,214 - INFO - Casted birth_date Column into date format
2025-03-21 02:21:51,586 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 02:21:51,591 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:21:51,593 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:21:51,610 - INFO -  Select columns from bank_transaction data
2025-03-21 02:21:51,621 - INFO - Renamed columns
2025-03-21 02:21:51,634 - INFO - Casted transaction_date column to date format
2025-03-21 02:21:51,666 - INFO - Casted transaction_amount column to float
2025-03-21 02:21:53,436 - INFO - Casted transaction_time column to time format
2025-03-21 02:21:53,437 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:21:53,438 - INFO - ===== Create connection to dwh =====
2025-03-21 02:21:53,639 - INFO - ===== Connection created =====
2025-03-21 02:21:53,639 - INFO - ===== Start Loading education_status data =====
2025-03-21 02:21:53,752 - ERROR - ====== Failed to Load Data education_status ======
2025-03-21 02:21:53,752 - ERROR - An error occurred while calling o222.jdbc.
: org.postgresql.util.PSQLException: ERROR: cannot drop table education_status because other objects depend on it
  Detail: constraint marketing_campaign_deposit_education_id_fkey on table marketing_campaign_deposit depends on table education_status
  Hint: Use DROP ... CASCADE to drop the dependent objects too.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.executeUpdate(PgStatement.java:270)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.executeStatement(JdbcUtils.scala:1094)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.dropTable(JdbcUtils.scala:81)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:63)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-21 02:21:53,754 - INFO - Closing down clientserver connection
2025-03-21 02:22:31,205 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:22:35,821 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:22:35,822 - INFO - ===== Start Extracting education_status data =====
2025-03-21 02:22:36,170 - INFO - ===== Success Extracting education_status data =====
2025-03-21 02:22:36,170 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 02:22:36,228 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 02:22:36,228 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 02:22:36,310 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 02:22:36,347 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:22:36,371 - INFO - Renamed Columns
2025-03-21 02:22:36,435 - INFO - Removed '$' in balance column
2025-03-21 02:22:36,483 - INFO - Casted balance column to integer
2025-03-21 02:22:36,565 - INFO - Converted duration in year
2025-03-21 02:22:36,598 - INFO - Casted duration into intefer
2025-03-21 02:22:36,601 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:22:36,606 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:22:36,644 - INFO -  Selected columns from Bank transaction data 
2025-03-21 02:22:36,665 - INFO -  Renamed Columns 
2025-03-21 02:22:36,710 - INFO -  Mapped Gender Column 
2025-03-21 02:22:36,742 - INFO - Casted account_balance Column into float
2025-03-21 02:22:36,929 - INFO - Casted birth_date Column into date format
2025-03-21 02:22:37,263 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 02:22:37,267 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:22:37,269 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:22:37,291 - INFO -  Select columns from bank_transaction data
2025-03-21 02:22:37,310 - INFO - Renamed columns
2025-03-21 02:22:37,328 - INFO - Casted transaction_date column to date format
2025-03-21 02:22:37,360 - INFO - Casted transaction_amount column to float
2025-03-21 02:22:38,980 - INFO - Casted transaction_time column to time format
2025-03-21 02:22:38,981 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:22:38,982 - INFO - ===== Create connection to dwh =====
2025-03-21 02:22:39,203 - INFO - ===== Connection created =====
2025-03-21 02:22:39,203 - INFO - ===== Start Loading education_status data =====
2025-03-21 02:23:19,499 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>
2025-03-21 02:23:19,500 - INFO - Closing down clientserver connection
2025-03-21 02:23:19,500 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 02:23:19,503 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 02:23:19,505 - INFO - Closing down clientserver connection
2025-03-21 02:23:19,505 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 02:23:19,507 - INFO - Closing down clientserver connection
2025-03-21 02:23:19,508 - ERROR - ====== Failed to Load Data education_status ======
2025-03-21 02:23:19,509 - ERROR - An error occurred while calling o222.jdbc
2025-03-21 02:23:19,509 - INFO - Closing down clientserver connection
2025-03-21 02:25:10,810 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:25:15,838 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:25:15,838 - INFO - ===== Start Extracting education_status data =====
2025-03-21 02:25:16,331 - INFO - ===== Success Extracting education_status data =====
2025-03-21 02:25:16,331 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 02:25:16,392 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 02:25:16,393 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 02:25:16,480 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 02:25:16,519 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:25:16,552 - INFO - Renamed Columns
2025-03-21 02:25:16,626 - INFO - Removed '$' in balance column
2025-03-21 02:25:16,670 - INFO - Casted balance column to integer
2025-03-21 02:25:16,763 - INFO - Converted duration in year
2025-03-21 02:25:16,800 - INFO - Casted duration into intefer
2025-03-21 02:25:16,803 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:25:16,809 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:25:16,844 - INFO -  Selected columns from Bank transaction data 
2025-03-21 02:25:16,861 - INFO -  Renamed Columns 
2025-03-21 02:25:16,900 - INFO -  Mapped Gender Column 
2025-03-21 02:25:16,919 - INFO - Casted account_balance Column into float
2025-03-21 02:25:17,111 - INFO - Casted birth_date Column into date format
2025-03-21 02:25:17,519 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 02:25:17,524 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:25:17,526 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:25:17,549 - INFO -  Select columns from bank_transaction data
2025-03-21 02:25:17,567 - INFO - Renamed columns
2025-03-21 02:25:17,588 - INFO - Casted transaction_date column to date format
2025-03-21 02:25:17,617 - INFO - Casted transaction_amount column to float
2025-03-21 02:25:19,399 - INFO - Casted transaction_time column to time format
2025-03-21 02:25:19,401 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:25:19,401 - INFO - ===== Create connection to dwh =====
2025-03-21 02:25:19,646 - INFO - ===== Connection created =====
2025-03-21 02:25:19,646 - INFO - ===== Start Loading education_status data =====
2025-03-21 02:25:19,760 - ERROR - ====== Failed to Load Data education_status ======
2025-03-21 02:25:19,760 - ERROR - An error occurred while calling o222.jdbc.
: org.postgresql.util.PSQLException: ERROR: cannot drop table education_status because other objects depend on it
  Detail: constraint marketing_campaign_deposit_education_id_fkey on table marketing_campaign_deposit depends on table education_status
  Hint: Use DROP ... CASCADE to drop the dependent objects too.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.executeUpdate(PgStatement.java:270)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.executeStatement(JdbcUtils.scala:1094)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.dropTable(JdbcUtils.scala:81)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:63)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-21 02:25:19,761 - INFO - ===== Create connection to dwh =====
2025-03-21 02:25:19,875 - INFO - ===== Connection created =====
2025-03-21 02:25:19,876 - INFO - ===== Start Loading marital_status data =====
2025-03-21 02:25:19,961 - ERROR - ====== Failed to Load Data marital_status ======
2025-03-21 02:25:19,962 - ERROR - An error occurred while calling o226.jdbc.
: org.postgresql.util.PSQLException: ERROR: cannot drop table marital_status because other objects depend on it
  Detail: constraint marketing_campaign_deposit_marital_id_fkey on table marketing_campaign_deposit depends on table marital_status
  Hint: Use DROP ... CASCADE to drop the dependent objects too.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.executeUpdate(PgStatement.java:270)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.executeStatement(JdbcUtils.scala:1094)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.dropTable(JdbcUtils.scala:81)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:63)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-21 02:25:19,963 - INFO - ===== Create connection to dwh =====
2025-03-21 02:25:20,072 - INFO - ===== Connection created =====
2025-03-21 02:25:20,073 - INFO - ===== Start Loading marketing_campaign_deposit data =====
2025-03-21 02:25:22,621 - INFO - ===== Success Loading marketing_campaign_deposit data =====
2025-03-21 02:25:22,622 - INFO - ===== Create connection to dwh =====
2025-03-21 02:25:22,732 - INFO - ===== Connection created =====
2025-03-21 02:25:22,732 - INFO - ===== Start Loading customers data =====
2025-03-21 02:25:22,831 - ERROR - ====== Failed to Load Data customers ======
2025-03-21 02:25:22,831 - ERROR - An error occurred while calling o233.jdbc.
: org.postgresql.util.PSQLException: ERROR: cannot drop table customers because other objects depend on it
  Detail: constraint transactions_customer_id_fkey on table transactions depends on table customers
  Hint: Use DROP ... CASCADE to drop the dependent objects too.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.executeUpdate(PgStatement.java:270)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.executeStatement(JdbcUtils.scala:1094)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.dropTable(JdbcUtils.scala:81)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:63)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-21 02:25:22,833 - INFO - ===== Create connection to dwh =====
2025-03-21 02:25:22,934 - INFO - ===== Connection created =====
2025-03-21 02:25:22,935 - INFO - ===== Start Loading transactions data =====
2025-03-21 02:25:35,586 - INFO - ===== Success Loading transactions data =====
2025-03-21 02:25:35,587 - INFO - Closing down clientserver connection
2025-03-21 02:28:40,724 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:28:45,391 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 02:28:45,392 - INFO - ===== Start Extracting education_status data =====
2025-03-21 02:28:45,958 - INFO - ===== Success Extracting education_status data =====
2025-03-21 02:28:45,958 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 02:28:46,033 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 02:28:46,033 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 02:28:46,137 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 02:28:46,174 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:28:46,213 - INFO - Renamed Columns
2025-03-21 02:28:46,285 - INFO - Removed '$' in balance column
2025-03-21 02:28:46,332 - INFO - Casted balance column to integer
2025-03-21 02:28:46,425 - INFO - Converted duration in year
2025-03-21 02:28:46,474 - INFO - Casted duration into intefer
2025-03-21 02:28:46,477 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 02:28:46,482 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:28:46,508 - INFO -  Selected columns from Bank transaction data 
2025-03-21 02:28:46,530 - INFO -  Renamed Columns 
2025-03-21 02:28:46,576 - INFO -  Mapped Gender Column 
2025-03-21 02:28:46,599 - INFO - Casted account_balance Column into float
2025-03-21 02:28:46,811 - INFO - Casted birth_date Column into date format
2025-03-21 02:28:47,212 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 02:28:47,216 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:28:47,218 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:28:47,231 - INFO -  Select columns from bank_transaction data
2025-03-21 02:28:47,245 - INFO - Renamed columns
2025-03-21 02:28:47,258 - INFO - Casted transaction_date column to date format
2025-03-21 02:28:47,278 - INFO - Casted transaction_amount column to float
2025-03-21 02:28:48,930 - INFO - Casted transaction_time column to time format
2025-03-21 02:28:48,933 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 02:28:48,933 - INFO - ===== Create connection to dwh =====
2025-03-21 02:28:49,136 - INFO - ===== Connection created =====
2025-03-21 02:28:49,136 - INFO - ===== Start Loading education_status data =====
2025-03-21 02:28:49,623 - INFO - ===== Success Loading education_status data =====
2025-03-21 02:28:49,624 - INFO - Closing down clientserver connection
2025-03-21 05:22:17,024 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:22:22,770 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:22:22,770 - INFO - ===== Start Extracting education_status data =====
2025-03-21 05:22:23,158 - INFO - ===== Success Extracting education_status data =====
2025-03-21 05:22:23,158 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:22:23,197 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:22:23,197 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 05:22:23,270 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 05:22:23,325 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:22:23,377 - INFO - Renamed Columns
2025-03-21 05:22:23,443 - INFO - Removed '$' in balance column
2025-03-21 05:22:23,476 - INFO - Casted balance column to integer
2025-03-21 05:22:23,569 - INFO - Converted duration in year
2025-03-21 05:22:23,596 - INFO - Casted duration into intefer
2025-03-21 05:22:23,598 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:22:23,602 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:22:23,636 - INFO -  Selected columns from Bank transaction data 
2025-03-21 05:22:23,653 - INFO -  Renamed Columns 
2025-03-21 05:22:23,702 - INFO -  Mapped Gender Column 
2025-03-21 05:22:23,724 - INFO - Casted account_balance Column into float
2025-03-21 05:22:23,899 - INFO - Casted birth_date Column into date format
2025-03-21 05:22:24,275 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 05:22:24,279 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:22:24,280 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:22:24,302 - INFO -  Select columns from bank_transaction data
2025-03-21 05:22:24,314 - INFO - Renamed columns
2025-03-21 05:22:24,328 - INFO - Casted transaction_date column to date format
2025-03-21 05:22:24,351 - INFO - Casted transaction_amount column to float
2025-03-21 05:22:25,987 - INFO - Casted transaction_time column to time format
2025-03-21 05:22:25,988 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:22:25,988 - INFO - ===== Create connection to dwh =====
2025-03-21 05:22:26,281 - INFO - ===== Connection created =====
2025-03-21 05:22:26,283 - INFO - ===== Truncate education_status data =====
2025-03-21 05:22:26,283 - INFO - ===== Start Loading education_status data =====
2025-03-21 05:24:45,647 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>
2025-03-21 05:24:45,648 - INFO - Closing down clientserver connection
2025-03-21 05:24:45,649 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=4>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 05:24:45,652 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 05:24:45,657 - INFO - Closing down clientserver connection
2025-03-21 05:24:45,657 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 05:24:45,659 - INFO - Closing down clientserver connection
2025-03-21 05:24:45,659 - ERROR - ====== Failed to Load Data education_status ======
2025-03-21 05:24:45,659 - ERROR - An error occurred while calling o222.jdbc
2025-03-21 05:24:45,660 - INFO - ===== Create connection to dwh =====
2025-03-21 05:24:45,786 - INFO - ===== Connection created =====
2025-03-21 05:24:45,789 - INFO - ===== Truncate marital_status data =====
2025-03-21 05:24:45,789 - INFO - ===== Start Loading marital_status data =====
2025-03-21 05:24:46,377 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=13>
2025-03-21 05:24:46,378 - INFO - Closing down clientserver connection
2025-03-21 05:24:46,378 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: reentrant call inside <_io.BufferedReader name=13>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 05:24:46,379 - INFO - Error while receiving.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-21 05:24:46,380 - INFO - Closing down clientserver connection
2025-03-21 05:24:46,380 - ERROR - Exception while sending command.
Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/socket.py", line 706, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/usr/local/spark/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
    ^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-21 05:24:46,381 - INFO - Closing down clientserver connection
2025-03-21 05:24:46,381 - ERROR - ====== Failed to Load Data marital_status ======
2025-03-21 05:24:46,381 - ERROR - An error occurred while calling o227.jdbc
2025-03-21 05:24:46,382 - INFO - ===== Create connection to dwh =====
2025-03-21 05:25:31,966 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:25:36,484 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:25:36,484 - INFO - ===== Start Extracting education_status data =====
2025-03-21 05:25:36,816 - INFO - ===== Success Extracting education_status data =====
2025-03-21 05:25:36,816 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:25:36,861 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:25:36,861 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 05:25:36,938 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 05:25:36,959 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:25:36,981 - INFO - Renamed Columns
2025-03-21 05:25:37,040 - INFO - Removed '$' in balance column
2025-03-21 05:25:37,077 - INFO - Casted balance column to integer
2025-03-21 05:25:37,142 - INFO - Converted duration in year
2025-03-21 05:25:37,167 - INFO - Casted duration into intefer
2025-03-21 05:25:37,169 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:25:37,173 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:25:37,192 - INFO -  Selected columns from Bank transaction data 
2025-03-21 05:25:37,204 - INFO -  Renamed Columns 
2025-03-21 05:25:37,238 - INFO -  Mapped Gender Column 
2025-03-21 05:25:37,252 - INFO - Casted account_balance Column into float
2025-03-21 05:25:37,406 - INFO - Casted birth_date Column into date format
2025-03-21 05:25:37,714 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 05:25:37,718 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:25:37,735 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:25:37,746 - INFO -  Select columns from bank_transaction data
2025-03-21 05:25:37,756 - INFO - Renamed columns
2025-03-21 05:25:37,771 - INFO - Casted transaction_date column to date format
2025-03-21 05:25:37,792 - INFO - Casted transaction_amount column to float
2025-03-21 05:25:39,268 - INFO - Casted transaction_time column to time format
2025-03-21 05:25:39,270 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:25:39,270 - INFO - ===== Create connection to dwh =====
2025-03-21 05:27:44,820 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:27:49,371 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:27:49,371 - INFO - ===== Start Extracting education_status data =====
2025-03-21 05:27:49,689 - INFO - ===== Success Extracting education_status data =====
2025-03-21 05:27:49,689 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:27:49,737 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:27:49,737 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 05:27:49,836 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 05:27:49,875 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:27:49,902 - INFO - Renamed Columns
2025-03-21 05:27:49,972 - INFO - Removed '$' in balance column
2025-03-21 05:27:50,014 - INFO - Casted balance column to integer
2025-03-21 05:27:50,088 - INFO - Converted duration in year
2025-03-21 05:27:50,132 - INFO - Casted duration into intefer
2025-03-21 05:27:50,134 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:27:50,139 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:27:50,159 - INFO -  Selected columns from Bank transaction data 
2025-03-21 05:27:50,173 - INFO -  Renamed Columns 
2025-03-21 05:27:50,202 - INFO -  Mapped Gender Column 
2025-03-21 05:27:50,222 - INFO - Casted account_balance Column into float
2025-03-21 05:27:50,429 - INFO - Casted birth_date Column into date format
2025-03-21 05:27:50,806 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 05:27:50,809 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:27:50,811 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:27:50,822 - INFO -  Select columns from bank_transaction data
2025-03-21 05:27:50,831 - INFO - Renamed columns
2025-03-21 05:27:50,844 - INFO - Casted transaction_date column to date format
2025-03-21 05:27:50,870 - INFO - Casted transaction_amount column to float
2025-03-21 05:27:52,634 - INFO - Casted transaction_time column to time format
2025-03-21 05:27:52,636 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:27:52,637 - INFO - ===== Create connection to dwh =====
2025-03-21 05:29:29,359 - ERROR - ====== Failed to Load Data education_status ======
2025-03-21 05:29:29,359 - ERROR - (psycopg2.OperationalError) server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

[SQL: SELECT pg_catalog.pg_attribute.attname AS name, pg_catalog.format_type(pg_catalog.pg_attribute.atttypid, pg_catalog.pg_attribute.atttypmod) AS format_type, (SELECT pg_catalog.pg_get_expr(pg_catalog.pg_attrdef.adbin, pg_catalog.pg_attrdef.adrelid) AS pg_get_expr_1 
FROM pg_catalog.pg_attrdef 
WHERE pg_catalog.pg_attrdef.adrelid = pg_catalog.pg_attribute.attrelid AND pg_catalog.pg_attrdef.adnum = pg_catalog.pg_attribute.attnum AND pg_catalog.pg_attribute.atthasdef) AS "default", pg_catalog.pg_attribute.attnotnull AS not_null, pg_catalog.pg_class.relname AS table_name, pg_catalog.pg_description.description AS comment, pg_catalog.pg_attribute.attgenerated AS generated, (SELECT json_build_object(%(json_build_object_2)s, pg_catalog.pg_attribute.attidentity = %(attidentity_1)s, %(json_build_object_3)s, pg_catalog.pg_sequence.seqstart, %(json_build_object_4)s, pg_catalog.pg_sequence.seqincrement, %(json_build_object_5)s, pg_catalog.pg_sequence.seqmin, %(json_build_object_6)s, pg_catalog.pg_sequence.seqmax, %(json_build_object_7)s, pg_catalog.pg_sequence.seqcache, %(json_build_object_8)s, pg_catalog.pg_sequence.seqcycle) AS json_build_object_1 
FROM pg_catalog.pg_sequence 
WHERE pg_catalog.pg_attribute.attidentity != %(attidentity_2)s AND pg_catalog.pg_sequence.seqrelid = CAST(CAST(pg_catalog.pg_get_serial_sequence(CAST(CAST(pg_catalog.pg_attribute.attrelid AS REGCLASS) AS TEXT), pg_catalog.pg_attribute.attname) AS REGCLASS) AS OID)) AS identity_options 
FROM pg_catalog.pg_class LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_class.oid = pg_catalog.pg_attribute.attrelid AND pg_catalog.pg_attribute.attnum > %(attnum_1)s AND NOT pg_catalog.pg_attribute.attisdropped LEFT OUTER JOIN pg_catalog.pg_description ON pg_catalog.pg_description.objoid = pg_catalog.pg_attribute.attrelid AND pg_catalog.pg_description.objsubid = pg_catalog.pg_attribute.attnum JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s, %(filter_names_2)s, %(filter_names_3)s, %(filter_names_4)s, %(filter_names_5)s) ORDER BY pg_catalog.pg_class.relname, pg_catalog.pg_attribute.attnum]
[parameters: {'json_build_object_2': 'always', 'attidentity_1': 'a', 'json_build_object_3': 'start', 'json_build_object_4': 'increment', 'json_build_object_5': 'minvalue', 'json_build_object_6': 'maxvalue', 'json_build_object_7': 'cache', 'json_build_object_8': 'cycle', 'attidentity_2': '', 'attnum_1': 0, 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'nspname_1': 'pg_catalog', 'filter_names_1': 'marital_status', 'filter_names_2': 'marketing_campaign_deposit', 'filter_names_3': 'education_status', 'filter_names_4': 'customers', 'filter_names_5': 'transactions'}]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-21 05:29:29,359 - INFO - ===== Create connection to dwh =====
2025-03-21 05:29:29,365 - ERROR - ====== Failed to Load Data marital_status ======
2025-03-21 05:29:29,366 - ERROR - (psycopg2.OperationalError) connection to server at "data_warehouse" (172.21.0.2), port 5432 failed: FATAL:  the database system is shutting down

(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-21 05:29:29,367 - INFO - ===== Create connection to dwh =====
2025-03-21 05:29:29,378 - ERROR - ====== Failed to Load Data marketing_campaign_deposit ======
2025-03-21 05:29:29,379 - ERROR - (psycopg2.OperationalError) connection to server at "data_warehouse" (172.21.0.2), port 5432 failed: FATAL:  the database system is shutting down

(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-21 05:29:29,379 - INFO - ===== Create connection to dwh =====
2025-03-21 05:29:29,394 - ERROR - ====== Failed to Load Data customers ======
2025-03-21 05:29:29,394 - ERROR - (psycopg2.OperationalError) connection to server at "data_warehouse" (172.21.0.2), port 5432 failed: FATAL:  the database system is shutting down

(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-21 05:29:29,395 - INFO - ===== Create connection to dwh =====
2025-03-21 05:29:29,403 - INFO - Closing down clientserver connection
2025-03-21 05:29:29,404 - INFO - Closing down clientserver connection
2025-03-21 05:29:29,407 - ERROR - ====== Failed to Load Data transactions ======
2025-03-21 05:29:29,408 - ERROR - (psycopg2.OperationalError) connection to server at "data_warehouse" (172.21.0.2), port 5432 failed: FATAL:  the database system is shutting down

(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-21 05:29:29,409 - INFO - Closing down clientserver connection
2025-03-21 05:29:29,545 - ERROR - Exception during reset or similar
Traceback (most recent call last):
  File "/opt/conda/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 988, in _finalize_fairy
    fairy._reset(
  File "/opt/conda/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1438, in _reset
    pool._dialect.do_rollback(self)
  File "/opt/conda/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 692, in do_rollback
    dbapi_connection.rollback()
psycopg2.OperationalError: server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

2025-03-21 05:33:06,070 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:33:10,435 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:33:10,435 - INFO - ===== Start Extracting education_status data =====
2025-03-21 05:33:10,829 - INFO - ===== Success Extracting education_status data =====
2025-03-21 05:33:10,829 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:33:10,885 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:33:10,885 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 05:33:10,962 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 05:33:10,998 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:33:11,033 - INFO - Renamed Columns
2025-03-21 05:33:11,104 - INFO - Removed '$' in balance column
2025-03-21 05:33:11,140 - INFO - Casted balance column to integer
2025-03-21 05:33:11,216 - INFO - Converted duration in year
2025-03-21 05:33:11,251 - INFO - Casted duration into intefer
2025-03-21 05:33:11,253 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:33:11,258 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:33:11,288 - INFO -  Selected columns from Bank transaction data 
2025-03-21 05:33:11,304 - INFO -  Renamed Columns 
2025-03-21 05:33:11,333 - INFO -  Mapped Gender Column 
2025-03-21 05:33:11,354 - INFO - Casted account_balance Column into float
2025-03-21 05:33:11,558 - INFO - Casted birth_date Column into date format
2025-03-21 05:33:11,910 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 05:33:11,914 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:33:11,916 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:33:11,930 - INFO -  Select columns from bank_transaction data
2025-03-21 05:33:11,946 - INFO - Renamed columns
2025-03-21 05:33:11,963 - INFO - Casted transaction_date column to date format
2025-03-21 05:33:11,987 - INFO - Casted transaction_amount column to float
2025-03-21 05:33:13,517 - INFO - Casted transaction_time column to time format
2025-03-21 05:33:13,519 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:33:13,520 - INFO - ===== Create connection to dwh =====
2025-03-21 05:33:13,723 - INFO - ===== Connection created =====
2025-03-21 05:33:13,726 - INFO - ===== Truncate education_status data =====
2025-03-21 05:33:13,726 - INFO - ===== Start Loading education_status data =====
2025-03-21 05:33:14,176 - INFO - ===== Success Loading education_status data =====
2025-03-21 05:33:14,176 - INFO - ===== Create connection to dwh =====
2025-03-21 05:33:14,282 - INFO - ===== Connection created =====
2025-03-21 05:33:14,284 - INFO - ===== Truncate marital_status data =====
2025-03-21 05:33:14,284 - INFO - ===== Start Loading marital_status data =====
2025-03-21 05:33:14,532 - INFO - ===== Success Loading marital_status data =====
2025-03-21 05:33:14,532 - INFO - ===== Create connection to dwh =====
2025-03-21 05:33:14,626 - INFO - ===== Connection created =====
2025-03-21 05:33:14,627 - INFO - ===== Truncate marketing_campaign_deposit data =====
2025-03-21 05:33:14,628 - INFO - ===== Start Loading marketing_campaign_deposit data =====
2025-03-21 05:33:17,675 - INFO - ===== Success Loading marketing_campaign_deposit data =====
2025-03-21 05:33:17,675 - INFO - ===== Create connection to dwh =====
2025-03-21 05:33:17,786 - INFO - ===== Connection created =====
2025-03-21 05:33:17,788 - INFO - ===== Truncate customers data =====
2025-03-21 05:33:17,788 - INFO - ===== Start Loading customers data =====
2025-03-21 05:33:37,898 - INFO - ===== Success Loading customers data =====
2025-03-21 05:33:37,898 - INFO - ===== Create connection to dwh =====
2025-03-21 05:33:38,003 - INFO - ===== Connection created =====
2025-03-21 05:33:38,005 - INFO - ===== Truncate transactions data =====
2025-03-21 05:33:38,005 - INFO - ===== Start Loading transactions data =====
2025-03-21 05:33:57,018 - INFO - ===== Success Loading transactions data =====
2025-03-21 05:33:57,019 - INFO - Closing down clientserver connection
2025-03-21 05:42:48,088 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:42:52,437 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:42:52,437 - INFO - ===== Start Extracting education_status data =====
2025-03-21 05:42:52,837 - INFO - ===== Success Extracting education_status data =====
2025-03-21 05:42:52,837 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:42:52,897 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:42:52,897 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 05:42:52,962 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 05:42:52,989 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:42:53,014 - INFO - Renamed Columns
2025-03-21 05:42:53,054 - INFO - Removed '$' in balance column
2025-03-21 05:42:53,088 - INFO - Casted balance column to integer
2025-03-21 05:42:53,153 - INFO - Converted duration in year
2025-03-21 05:42:53,188 - INFO - Casted duration into intefer
2025-03-21 05:42:53,190 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:42:53,196 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:42:53,227 - INFO -  Selected columns from Bank transaction data 
2025-03-21 05:42:53,243 - INFO -  Renamed Columns 
2025-03-21 05:42:53,299 - INFO -  Mapped Gender Column 
2025-03-21 05:42:53,327 - INFO - Casted account_balance Column into float
2025-03-21 05:42:53,538 - INFO - Casted birth_date Column into date format
2025-03-21 05:42:53,835 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 05:42:53,838 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:42:53,840 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:42:53,851 - INFO -  Select columns from bank_transaction data
2025-03-21 05:42:53,867 - INFO - Renamed columns
2025-03-21 05:42:53,883 - INFO - Casted transaction_date column to date format
2025-03-21 05:42:53,909 - INFO - Casted transaction_amount column to float
2025-03-21 05:42:55,449 - INFO - Casted transaction_time column to time format
2025-03-21 05:42:55,450 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:42:55,451 - INFO - ===== Create connection to dwh =====
2025-03-21 05:42:55,669 - INFO - ===== Connection created =====
2025-03-21 05:42:55,672 - INFO - ===== Truncate education_status data =====
2025-03-21 05:42:55,672 - INFO - ===== Start Loading education_status data =====
2025-03-21 05:42:56,105 - INFO - ===== Success Loading education_status data =====
2025-03-21 05:42:56,106 - INFO - ===== Create connection to dwh =====
2025-03-21 05:42:56,202 - INFO - ===== Connection created =====
2025-03-21 05:42:56,204 - INFO - ===== Truncate marital_status data =====
2025-03-21 05:42:56,204 - INFO - ===== Start Loading marital_status data =====
2025-03-21 05:42:56,451 - INFO - ===== Success Loading marital_status data =====
2025-03-21 05:42:56,452 - INFO - ===== Create connection to dwh =====
2025-03-21 05:42:56,555 - INFO - ===== Connection created =====
2025-03-21 05:42:56,557 - INFO - ===== Truncate marketing_campaign_deposit data =====
2025-03-21 05:42:56,557 - INFO - ===== Start Loading marketing_campaign_deposit data =====
2025-03-21 05:42:59,166 - INFO - ===== Success Loading marketing_campaign_deposit data =====
2025-03-21 05:42:59,166 - INFO - ===== Create connection to dwh =====
2025-03-21 05:42:59,280 - INFO - ===== Connection created =====
2025-03-21 05:42:59,282 - INFO - ===== Truncate customers data =====
2025-03-21 05:42:59,282 - INFO - ===== Start Loading customers data =====
2025-03-21 05:43:17,592 - INFO - ===== Success Loading customers data =====
2025-03-21 05:43:17,592 - INFO - ===== Create connection to dwh =====
2025-03-21 05:43:17,697 - INFO - ===== Connection created =====
2025-03-21 05:43:17,700 - INFO - ===== Truncate transactions data =====
2025-03-21 05:43:17,700 - INFO - ===== Start Loading transactions data =====
2025-03-21 05:43:32,894 - INFO - ===== Success Loading transactions data =====
2025-03-21 05:43:32,894 - INFO - Closing down clientserver connection
2025-03-21 05:49:45,506 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:49:46,790 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:50:53,342 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:50:53,430 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:51:57,288 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:51:57,328 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:52:10,759 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:52:10,818 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:52:29,441 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:52:29,493 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:52:35,140 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:52:35,213 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:53:28,065 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:53:28,113 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:53:44,483 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 05:53:44,549 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 05:55:12,350 - INFO - ===== Start Extracting transactions data =====
2025-03-21 05:55:12,458 - ERROR - ====== Failed to Extract Data transactions ======
2025-03-21 05:55:12,458 - ERROR - An error occurred while calling o60.jdbc.
: org.postgresql.util.PSQLException: ERROR: relation "transactions" does not exist
  Position: 15
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:68)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at org.apache.spark.sql.DataFrameReader.jdbc(DataFrameReader.scala:249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-21 05:55:33,068 - INFO - ===== Start Extracting customers data =====
2025-03-21 05:55:33,166 - ERROR - ====== Failed to Extract Data customers ======
2025-03-21 05:55:33,166 - ERROR - An error occurred while calling o63.jdbc.
: org.postgresql.util.PSQLException: ERROR: relation "customers" does not exist
  Position: 15
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:68)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at org.apache.spark.sql.DataFrameReader.jdbc(DataFrameReader.scala:249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-21 05:55:43,997 - INFO - ===== Start Extracting customers data =====
2025-03-21 05:55:44,080 - ERROR - ====== Failed to Extract Data customers ======
2025-03-21 05:55:44,080 - ERROR - An error occurred while calling o68.jdbc.
: org.postgresql.util.PSQLException: ERROR: relation "customers" does not exist
  Position: 15
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.getQueryOutputSchema(JDBCRDD.scala:68)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation$.getSchema(JDBCRelation.scala:241)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:37)
	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)
	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)
	at org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)
	at scala.Option.getOrElse(Option.scala:189)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)
	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)
	at org.apache.spark.sql.DataFrameReader.jdbc(DataFrameReader.scala:249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)

2025-03-21 05:57:36,410 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-21 05:57:36,414 - WARNING - No such comm: a360c063-bbac-4e87-9c07-a90a6225a358
2025-03-21 05:57:59,779 - INFO - ===== Start Extracting customers data =====
2025-03-21 05:58:01,034 - INFO - ===== Success Extracting customers data =====
2025-03-21 05:58:19,783 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:58:24,055 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 05:58:24,056 - INFO - ===== Start Extracting education_status data =====
2025-03-21 05:58:24,400 - INFO - ===== Success Extracting education_status data =====
2025-03-21 05:58:24,400 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 05:58:24,448 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 05:58:24,448 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 05:58:24,529 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 05:58:24,575 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:58:24,613 - INFO - Renamed Columns
2025-03-21 05:58:24,652 - INFO - Removed '$' in balance column
2025-03-21 05:58:24,698 - INFO - Casted balance column to integer
2025-03-21 05:58:24,772 - INFO - Converted duration in year
2025-03-21 05:58:24,810 - INFO - Casted duration into intefer
2025-03-21 05:58:24,812 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 05:58:24,816 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:58:24,837 - INFO -  Selected columns from Bank transaction data 
2025-03-21 05:58:24,863 - INFO -  Renamed Columns 
2025-03-21 05:58:24,898 - INFO -  Mapped Gender Column 
2025-03-21 05:58:24,922 - INFO - Casted account_balance Column into float
2025-03-21 05:58:25,114 - INFO - Casted birth_date Column into date format
2025-03-21 05:58:25,435 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 05:58:25,438 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:58:25,440 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:58:25,456 - INFO -  Select columns from bank_transaction data
2025-03-21 05:58:25,467 - INFO - Renamed columns
2025-03-21 05:58:25,485 - INFO - Casted transaction_date column to date format
2025-03-21 05:58:25,509 - INFO - Casted transaction_amount column to float
2025-03-21 05:58:26,976 - INFO - Casted transaction_time column to time format
2025-03-21 05:58:26,978 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 05:58:26,978 - INFO - ===== Create connection to dwh =====
2025-03-21 05:58:27,189 - INFO - ===== Connection created =====
2025-03-21 05:58:27,191 - INFO - ===== Truncate education_status data =====
2025-03-21 05:58:27,191 - INFO - ===== Start Loading education_status data =====
2025-03-21 05:58:27,570 - INFO - ===== Success Loading education_status data =====
2025-03-21 05:58:27,570 - INFO - ===== Create connection to dwh =====
2025-03-21 05:58:27,678 - INFO - ===== Connection created =====
2025-03-21 05:58:27,680 - INFO - ===== Truncate marital_status data =====
2025-03-21 05:58:27,680 - INFO - ===== Start Loading marital_status data =====
2025-03-21 05:58:27,931 - INFO - ===== Success Loading marital_status data =====
2025-03-21 05:58:27,931 - INFO - ===== Create connection to dwh =====
2025-03-21 05:58:28,039 - INFO - ===== Connection created =====
2025-03-21 05:58:28,041 - INFO - ===== Truncate marketing_campaign_deposit data =====
2025-03-21 05:58:28,041 - INFO - ===== Start Loading marketing_campaign_deposit data =====
2025-03-21 05:58:30,793 - INFO - ===== Success Loading marketing_campaign_deposit data =====
2025-03-21 05:58:30,793 - INFO - ===== Create connection to dwh =====
2025-03-21 05:58:30,912 - INFO - ===== Connection created =====
2025-03-21 05:58:30,914 - INFO - ===== Truncate customers data =====
2025-03-21 05:58:30,914 - INFO - ===== Start Loading customers data =====
2025-03-21 05:58:48,911 - INFO - ===== Success Loading customers data =====
2025-03-21 05:58:48,911 - INFO - ===== Create connection to dwh =====
2025-03-21 05:58:49,005 - INFO - ===== Connection created =====
2025-03-21 05:58:49,006 - INFO - ===== Truncate transactions data =====
2025-03-21 05:58:49,006 - INFO - ===== Start Loading transactions data =====
2025-03-21 05:59:04,862 - INFO - ===== Success Loading transactions data =====
2025-03-21 05:59:04,862 - INFO - Closing down clientserver connection
2025-03-21 05:59:50,440 - INFO - ===== Start Extracting customers data =====
2025-03-21 05:59:50,508 - INFO - ===== Success Extracting customers data =====
2025-03-21 06:00:31,511 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:00:31,569 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:01:12,685 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:01:12,752 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:13:21,601 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:13:21,656 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:13:24,769 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:13:24,832 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:14:31,605 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:14:31,671 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:14:32,748 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:14:32,808 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:16:38,958 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:16:43,277 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:16:43,278 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:16:43,681 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:16:43,681 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:16:43,721 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:16:43,722 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:16:43,805 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:16:43,831 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:16:43,862 - INFO - Renamed Columns
2025-03-21 06:16:43,912 - INFO - Removed '$' in balance column
2025-03-21 06:16:43,948 - INFO - Casted balance column to integer
2025-03-21 06:16:44,021 - INFO - Converted duration in year
2025-03-21 06:16:44,049 - INFO - Casted duration into intefer
2025-03-21 06:16:44,051 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:16:44,055 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:16:44,083 - INFO -  Selected columns from Bank transaction data 
2025-03-21 06:16:44,097 - INFO -  Renamed Columns 
2025-03-21 06:16:44,143 - INFO -  Mapped Gender Column 
2025-03-21 06:16:44,164 - INFO - Casted account_balance Column into float
2025-03-21 06:16:44,401 - INFO - Casted birth_date Column into date format
2025-03-21 06:16:44,740 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 06:16:44,744 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:16:44,745 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:16:44,761 - INFO -  Select columns from bank_transaction data
2025-03-21 06:16:44,773 - INFO - Renamed columns
2025-03-21 06:16:44,790 - INFO - Casted transaction_date column to date format
2025-03-21 06:16:44,814 - INFO - Casted transaction_amount column to float
2025-03-21 06:16:46,292 - INFO - Casted transaction_time column to time format
2025-03-21 06:16:46,293 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:16:46,293 - INFO - ===== Create connection to dwh =====
2025-03-21 06:16:46,511 - INFO - ===== Connection created =====
2025-03-21 06:16:46,511 - INFO - ===== Get only new data =====
2025-03-21 06:16:46,511 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:16:46,549 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:16:46,561 - INFO - ===== Already got only New Data  =====
2025-03-21 06:16:46,561 - INFO - ===== Start Loading marital_status new data =====
2025-03-21 06:16:47,635 - INFO - ===== Success Loading marital_status new data =====
2025-03-21 06:16:47,636 - INFO - Closing down clientserver connection
2025-03-21 06:18:01,088 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:18:01,133 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:18:02,064 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:18:02,106 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:19:09,519 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:19:13,899 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:19:13,899 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:19:14,261 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:19:14,261 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:19:14,326 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:19:14,326 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:19:14,407 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:19:14,442 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:19:14,471 - INFO - Renamed Columns
2025-03-21 06:19:14,535 - INFO - Removed '$' in balance column
2025-03-21 06:19:14,574 - INFO - Casted balance column to integer
2025-03-21 06:19:14,643 - INFO - Converted duration in year
2025-03-21 06:19:14,682 - INFO - Casted duration into intefer
2025-03-21 06:19:14,684 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:19:14,688 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:19:14,717 - INFO -  Selected columns from Bank transaction data 
2025-03-21 06:19:14,729 - INFO -  Renamed Columns 
2025-03-21 06:19:14,765 - INFO -  Mapped Gender Column 
2025-03-21 06:19:14,786 - INFO - Casted account_balance Column into float
2025-03-21 06:19:14,968 - INFO - Casted birth_date Column into date format
2025-03-21 06:19:15,351 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 06:19:15,356 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:19:15,357 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:19:15,370 - INFO -  Select columns from bank_transaction data
2025-03-21 06:19:15,383 - INFO - Renamed columns
2025-03-21 06:19:15,396 - INFO - Casted transaction_date column to date format
2025-03-21 06:19:15,428 - INFO - Casted transaction_amount column to float
2025-03-21 06:19:16,939 - INFO - Casted transaction_time column to time format
2025-03-21 06:19:16,941 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:19:16,941 - INFO - ===== Create connection to dwh =====
2025-03-21 06:19:17,186 - INFO - ===== Connection created =====
2025-03-21 06:19:17,186 - INFO - ===== Get only new data =====
2025-03-21 06:19:17,186 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:19:17,224 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:19:18,148 - INFO - ===== Already got only New Data  =====
2025-03-21 06:19:18,148 - INFO - ===== Start Loading marital_status new data =====
2025-03-21 06:19:18,745 - INFO - ===== Success Loading marital_status new data =====
2025-03-21 06:19:18,746 - INFO - Closing down clientserver connection
2025-03-21 06:19:58,778 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:20:03,151 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:20:03,152 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:20:03,533 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:20:03,533 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:20:03,600 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:20:03,600 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:20:03,699 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:20:03,741 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:20:03,785 - INFO - Renamed Columns
2025-03-21 06:20:03,849 - INFO - Removed '$' in balance column
2025-03-21 06:20:03,895 - INFO - Casted balance column to integer
2025-03-21 06:20:03,965 - INFO - Converted duration in year
2025-03-21 06:20:04,001 - INFO - Casted duration into intefer
2025-03-21 06:20:04,003 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:20:04,006 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:20:04,027 - INFO -  Selected columns from Bank transaction data 
2025-03-21 06:20:04,044 - INFO -  Renamed Columns 
2025-03-21 06:20:04,079 - INFO -  Mapped Gender Column 
2025-03-21 06:20:04,097 - INFO - Casted account_balance Column into float
2025-03-21 06:20:04,281 - INFO - Casted birth_date Column into date format
2025-03-21 06:20:04,631 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 06:20:04,634 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:20:04,635 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:20:04,649 - INFO -  Select columns from bank_transaction data
2025-03-21 06:20:04,663 - INFO - Renamed columns
2025-03-21 06:20:04,676 - INFO - Casted transaction_date column to date format
2025-03-21 06:20:04,704 - INFO - Casted transaction_amount column to float
2025-03-21 06:20:06,218 - INFO - Casted transaction_time column to time format
2025-03-21 06:20:06,220 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:20:06,220 - INFO - ===== Create connection to dwh =====
2025-03-21 06:20:06,432 - INFO - ===== Connection created =====
2025-03-21 06:20:06,433 - INFO - ===== Get only new data =====
2025-03-21 06:20:06,433 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:20:06,473 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:20:07,748 - INFO - ===== Already got only New Data  =====
2025-03-21 06:20:07,748 - INFO - ===== Start Loading marital_status new data =====
2025-03-21 06:20:08,300 - INFO - ===== Success Loading marital_status new data =====
2025-03-21 06:20:08,300 - INFO - Closing down clientserver connection
2025-03-21 06:20:58,581 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:21:02,922 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:21:02,922 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:21:03,307 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:21:03,307 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:21:03,370 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:21:03,370 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:21:03,460 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:21:03,494 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:21:03,526 - INFO - Renamed Columns
2025-03-21 06:21:03,594 - INFO - Removed '$' in balance column
2025-03-21 06:21:03,636 - INFO - Casted balance column to integer
2025-03-21 06:21:03,711 - INFO - Converted duration in year
2025-03-21 06:21:03,748 - INFO - Casted duration into intefer
2025-03-21 06:21:03,751 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:21:03,756 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:21:03,782 - INFO -  Selected columns from Bank transaction data 
2025-03-21 06:21:03,801 - INFO -  Renamed Columns 
2025-03-21 06:21:03,849 - INFO -  Mapped Gender Column 
2025-03-21 06:21:03,876 - INFO - Casted account_balance Column into float
2025-03-21 06:21:04,079 - INFO - Casted birth_date Column into date format
2025-03-21 06:21:04,436 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 06:21:04,442 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:21:04,445 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:21:04,460 - INFO -  Select columns from bank_transaction data
2025-03-21 06:21:04,474 - INFO - Renamed columns
2025-03-21 06:21:04,489 - INFO - Casted transaction_date column to date format
2025-03-21 06:21:04,516 - INFO - Casted transaction_amount column to float
2025-03-21 06:21:06,088 - INFO - Casted transaction_time column to time format
2025-03-21 06:21:06,090 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:21:06,090 - INFO - ===== Create connection to dwh =====
2025-03-21 06:21:06,334 - INFO - ===== Connection created =====
2025-03-21 06:21:06,335 - INFO - ===== Get only new data =====
2025-03-21 06:21:06,335 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:21:06,378 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:21:07,784 - INFO - ===== Already got only New Data  =====
2025-03-21 06:21:07,784 - INFO - ===== Start Loading marital_status new data =====
2025-03-21 06:21:08,459 - INFO - ===== Success Loading marital_status new data =====
2025-03-21 06:21:08,460 - INFO - Closing down clientserver connection
2025-03-21 06:23:04,360 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:23:08,752 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:23:08,752 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:23:09,140 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:23:09,141 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:23:09,202 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:23:09,203 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:23:09,281 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:23:09,324 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:23:09,360 - INFO - Renamed Columns
2025-03-21 06:23:09,436 - INFO - Removed '$' in balance column
2025-03-21 06:23:09,477 - INFO - Casted balance column to integer
2025-03-21 06:23:09,555 - INFO - Converted duration in year
2025-03-21 06:23:09,588 - INFO - Casted duration into intefer
2025-03-21 06:23:09,590 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:23:09,594 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:23:09,614 - INFO -  Selected columns from Bank transaction data 
2025-03-21 06:23:09,629 - INFO -  Renamed Columns 
2025-03-21 06:23:09,667 - INFO -  Mapped Gender Column 
2025-03-21 06:23:09,691 - INFO - Casted account_balance Column into float
2025-03-21 06:23:09,876 - INFO - Casted birth_date Column into date format
2025-03-21 06:23:10,253 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 06:23:10,258 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:23:10,260 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:23:10,278 - INFO -  Select columns from bank_transaction data
2025-03-21 06:23:10,290 - INFO - Renamed columns
2025-03-21 06:23:10,310 - INFO - Casted transaction_date column to date format
2025-03-21 06:23:10,342 - INFO - Casted transaction_amount column to float
2025-03-21 06:23:11,826 - INFO - Casted transaction_time column to time format
2025-03-21 06:23:11,828 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:23:11,829 - INFO - ===== Create connection to dwh =====
2025-03-21 06:23:12,050 - INFO - ===== Connection created =====
2025-03-21 06:23:12,050 - INFO - ===== Get only new data =====
2025-03-21 06:23:12,050 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:23:12,091 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:23:12,102 - INFO - ===== Already got only New Data  =====
2025-03-21 06:23:12,103 - INFO - ===== Start Loading marital_status new data =====
2025-03-21 06:23:13,324 - INFO - ===== Success Loading marital_status new data =====
2025-03-21 06:23:13,325 - INFO - Closing down clientserver connection
2025-03-21 06:23:39,343 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:23:43,370 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:23:43,371 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:23:43,765 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:23:43,765 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:23:43,835 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:23:43,835 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:23:43,933 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:23:43,958 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:23:43,982 - INFO - Renamed Columns
2025-03-21 06:23:44,030 - INFO - Removed '$' in balance column
2025-03-21 06:23:44,067 - INFO - Casted balance column to integer
2025-03-21 06:23:44,138 - INFO - Converted duration in year
2025-03-21 06:23:44,172 - INFO - Casted duration into intefer
2025-03-21 06:23:44,173 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:23:44,177 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:23:44,205 - INFO -  Selected columns from Bank transaction data 
2025-03-21 06:23:44,226 - INFO -  Renamed Columns 
2025-03-21 06:23:44,288 - INFO -  Mapped Gender Column 
2025-03-21 06:23:44,304 - INFO - Casted account_balance Column into float
2025-03-21 06:23:44,480 - INFO - Casted birth_date Column into date format
2025-03-21 06:23:44,807 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 06:23:44,810 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:23:44,812 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:23:44,828 - INFO -  Select columns from bank_transaction data
2025-03-21 06:23:44,843 - INFO - Renamed columns
2025-03-21 06:23:44,856 - INFO - Casted transaction_date column to date format
2025-03-21 06:23:44,880 - INFO - Casted transaction_amount column to float
2025-03-21 06:23:46,397 - INFO - Casted transaction_time column to time format
2025-03-21 06:23:46,399 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:23:46,399 - INFO - ===== Create connection to dwh =====
2025-03-21 06:23:46,599 - INFO - ===== Connection created =====
2025-03-21 06:23:46,599 - INFO - ===== Get only new data =====
2025-03-21 06:23:46,599 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:23:46,635 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:23:46,647 - INFO - ===== Already got only New Data  =====
2025-03-21 06:23:46,647 - INFO - ===== Start Loading marital_status new data =====
2025-03-21 06:23:47,715 - INFO - ===== Success Loading marital_status new data =====
2025-03-21 06:23:47,716 - INFO - ===== Create connection to dwh =====
2025-03-21 06:23:47,830 - INFO - ===== Connection created =====
2025-03-21 06:23:47,830 - INFO - ===== Get only new data =====
2025-03-21 06:23:47,830 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:23:47,869 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:23:47,885 - INFO - ===== Already got only New Data  =====
2025-03-21 06:23:47,885 - INFO - ===== Start Loading marketing_campaign_deposit new data =====
2025-03-21 06:23:50,898 - INFO - ===== Success Loading marketing_campaign_deposit new data =====
2025-03-21 06:23:50,899 - INFO - ===== Create connection to dwh =====
2025-03-21 06:23:50,990 - INFO - ===== Connection created =====
2025-03-21 06:23:50,991 - INFO - ===== Get only new data =====
2025-03-21 06:23:50,991 - INFO - ===== Start Extracting customers data =====
2025-03-21 06:23:51,028 - INFO - ===== Success Extracting customers data =====
2025-03-21 06:23:51,045 - INFO - ===== Already got only New Data  =====
2025-03-21 06:23:51,045 - INFO - ===== Start Loading customers new data =====
2025-03-21 06:23:59,090 - INFO - ===== Success Loading customers new data =====
2025-03-21 06:23:59,090 - INFO - ===== Create connection to dwh =====
2025-03-21 06:23:59,176 - INFO - ===== Connection created =====
2025-03-21 06:23:59,176 - INFO - ===== Get only new data =====
2025-03-21 06:23:59,176 - INFO - ===== Start Extracting transactions data =====
2025-03-21 06:23:59,206 - INFO - ===== Success Extracting transactions data =====
2025-03-21 06:23:59,225 - INFO - ===== Already got only New Data  =====
2025-03-21 06:23:59,225 - INFO - ===== Start Loading transactions new data =====
2025-03-21 06:24:07,372 - INFO - ===== Success Loading transactions new data =====
2025-03-21 06:24:07,372 - INFO - Closing down clientserver connection
2025-03-21 06:25:04,359 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:25:08,855 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:25:08,856 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:25:09,240 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:25:09,240 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:25:09,293 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:25:09,293 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:25:09,379 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:25:09,428 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:25:09,462 - INFO - Renamed Columns
2025-03-21 06:25:09,517 - INFO - Removed '$' in balance column
2025-03-21 06:25:09,554 - INFO - Casted balance column to integer
2025-03-21 06:25:09,629 - INFO - Converted duration in year
2025-03-21 06:25:09,663 - INFO - Casted duration into intefer
2025-03-21 06:25:09,665 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:25:09,670 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:25:09,695 - INFO -  Selected columns from Bank transaction data 
2025-03-21 06:25:09,718 - INFO -  Renamed Columns 
2025-03-21 06:25:09,770 - INFO -  Mapped Gender Column 
2025-03-21 06:25:09,802 - INFO - Casted account_balance Column into float
2025-03-21 06:25:09,990 - INFO - Casted birth_date Column into date format
2025-03-21 06:25:10,319 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 06:25:10,322 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:25:10,323 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:25:10,339 - INFO -  Select columns from bank_transaction data
2025-03-21 06:25:10,354 - INFO - Renamed columns
2025-03-21 06:25:10,371 - INFO - Casted transaction_date column to date format
2025-03-21 06:25:10,399 - INFO - Casted transaction_amount column to float
2025-03-21 06:25:11,874 - INFO - Casted transaction_time column to time format
2025-03-21 06:25:11,876 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:25:11,876 - INFO - ===== Create connection to dwh =====
2025-03-21 06:25:12,091 - INFO - ===== Connection created =====
2025-03-21 06:25:12,091 - INFO - ===== Get only new data =====
2025-03-21 06:25:12,091 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:25:12,128 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:25:12,141 - INFO - ===== Already got only New Data  =====
2025-03-21 06:25:12,141 - INFO - ===== Start Loading marital_status new data =====
2025-03-21 06:25:13,228 - INFO - ===== Success Loading marital_status new data =====
2025-03-21 06:25:13,229 - INFO - ===== Create connection to dwh =====
2025-03-21 06:25:13,389 - INFO - ===== Connection created =====
2025-03-21 06:25:13,390 - INFO - ===== Get only new data =====
2025-03-21 06:25:13,390 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:25:13,450 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:25:13,471 - INFO - ===== Already got only New Data  =====
2025-03-21 06:25:13,471 - INFO - ===== Start Loading marketing_campaign_deposit new data =====
2025-03-21 06:25:15,360 - ERROR - ====== Failed to Load Data marketing_campaign_deposit ======
2025-03-21 06:25:15,360 - ERROR - An error occurred while calling o239.jdbc.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 13.0 failed 1 times, most recent failure: Lost task 1.0 in stage 13.0 (TID 10) (pyspark executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO marketing_campaign_deposit ("loan_data_id","age","job","marital_id","education_id","default","balance","housing","loan","contact","day","month","duration","campaign","days_since_last_campaign","previous_campaign_contacts","previous_campaign_outcome","subscribed_deposit","created_at","updated_at","duration_in_year") VALUES (229,36,'blue-collar',1,3,'FALSE',1033,'FALSE','FALSE','unknown',5,'may',238,2,-1,0,'unknown','FALSE','2025-02-28 15:59:11.102813+00'::timestamp,'2025-02-28 15:59:11.102813+00'::timestamp,0) was aborted: ERROR: insert or update on table "marketing_campaign_deposit" violates foreign key constraint "marketing_campaign_deposit_education_id_fkey"
  Detail: Key (education_id)=(3) is not present in table "education_status".  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2402)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2134)
	at org.postgresql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1491)
	at org.postgresql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1516)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:746)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "marketing_campaign_deposit" violates foreign key constraint "marketing_campaign_deposit_education_id_fkey"
  Detail: Key (education_id)=(3) is not present in table "education_status".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO marketing_campaign_deposit ("loan_data_id","age","job","marital_id","education_id","default","balance","housing","loan","contact","day","month","duration","campaign","days_since_last_campaign","previous_campaign_contacts","previous_campaign_outcome","subscribed_deposit","created_at","updated_at","duration_in_year") VALUES (229,36,'blue-collar',1,3,'FALSE',1033,'FALSE','FALSE','unknown',5,'may',238,2,-1,0,'unknown','FALSE','2025-02-28 15:59:11.102813+00'::timestamp,'2025-02-28 15:59:11.102813+00'::timestamp,0) was aborted: ERROR: insert or update on table "marketing_campaign_deposit" violates foreign key constraint "marketing_campaign_deposit_education_id_fkey"
  Detail: Key (education_id)=(3) is not present in table "education_status".  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2402)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2134)
	at org.postgresql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1491)
	at org.postgresql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1516)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:746)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	... 1 more
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "marketing_campaign_deposit" violates foreign key constraint "marketing_campaign_deposit_education_id_fkey"
  Detail: Key (education_id)=(3) is not present in table "education_status".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	... 24 more

2025-03-21 06:25:15,410 - INFO - ===== Create connection to dwh =====
2025-03-21 06:25:15,514 - INFO - ===== Connection created =====
2025-03-21 06:25:15,514 - INFO - ===== Get only new data =====
2025-03-21 06:25:15,514 - INFO - ===== Start Extracting customers data =====
2025-03-21 06:25:15,561 - INFO - ===== Success Extracting customers data =====
2025-03-21 06:25:15,579 - INFO - ===== Already got only New Data  =====
2025-03-21 06:25:15,579 - INFO - ===== Start Loading customers new data =====
2025-03-21 06:25:24,116 - INFO - ===== Success Loading customers new data =====
2025-03-21 06:25:24,116 - INFO - ===== Create connection to dwh =====
2025-03-21 06:25:24,224 - INFO - ===== Connection created =====
2025-03-21 06:25:24,224 - INFO - ===== Get only new data =====
2025-03-21 06:25:24,224 - INFO - ===== Start Extracting transactions data =====
2025-03-21 06:25:24,264 - INFO - ===== Success Extracting transactions data =====
2025-03-21 06:25:24,281 - INFO - ===== Already got only New Data  =====
2025-03-21 06:25:24,281 - INFO - ===== Start Loading transactions new data =====
2025-03-21 06:25:32,414 - INFO - ===== Success Loading transactions new data =====
2025-03-21 06:25:32,414 - INFO - Closing down clientserver connection
2025-03-21 06:27:33,571 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:27:38,021 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-21 06:27:38,021 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:27:38,403 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:27:38,404 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:27:38,465 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:27:38,465 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:27:38,545 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:27:38,583 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:27:38,616 - INFO - Renamed Columns
2025-03-21 06:27:38,697 - INFO - Removed '$' in balance column
2025-03-21 06:27:38,731 - INFO - Casted balance column to integer
2025-03-21 06:27:38,817 - INFO - Converted duration in year
2025-03-21 06:27:38,855 - INFO - Casted duration into intefer
2025-03-21 06:27:38,856 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-21 06:27:38,861 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:27:38,885 - INFO -  Selected columns from Bank transaction data 
2025-03-21 06:27:38,898 - INFO -  Renamed Columns 
2025-03-21 06:27:38,929 - INFO -  Mapped Gender Column 
2025-03-21 06:27:38,947 - INFO - Casted account_balance Column into float
2025-03-21 06:27:39,149 - INFO - Casted birth_date Column into date format
2025-03-21 06:27:39,504 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-21 06:27:39,508 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:27:39,510 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:27:39,522 - INFO -  Select columns from bank_transaction data
2025-03-21 06:27:39,537 - INFO - Renamed columns
2025-03-21 06:27:39,555 - INFO - Casted transaction_date column to date format
2025-03-21 06:27:39,580 - INFO - Casted transaction_amount column to float
2025-03-21 06:27:41,163 - INFO - Casted transaction_time column to time format
2025-03-21 06:27:41,165 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-21 06:27:41,165 - INFO - ===== Create connection to dwh =====
2025-03-21 06:27:41,376 - INFO - ===== Connection created =====
2025-03-21 06:27:41,376 - INFO - ===== Get only new data =====
2025-03-21 06:27:41,376 - INFO - ===== Start Extracting education_status data =====
2025-03-21 06:27:41,413 - INFO - ===== Success Extracting education_status data =====
2025-03-21 06:27:41,426 - INFO - ===== Already got only New Data  =====
2025-03-21 06:27:41,426 - INFO - ===== Start Loading education_status new data =====
2025-03-21 06:27:42,645 - INFO - ===== Success Loading education_status new data =====
2025-03-21 06:27:42,646 - INFO - ===== Create connection to dwh =====
2025-03-21 06:27:42,759 - INFO - ===== Connection created =====
2025-03-21 06:27:42,759 - INFO - ===== Get only new data =====
2025-03-21 06:27:42,759 - INFO - ===== Start Extracting marital_status data =====
2025-03-21 06:27:42,790 - INFO - ===== Success Extracting marital_status data =====
2025-03-21 06:27:42,802 - INFO - ===== Already got only New Data  =====
2025-03-21 06:27:42,802 - INFO - ===== Start Loading marital_status new data =====
2025-03-21 06:27:43,192 - INFO - ===== Success Loading marital_status new data =====
2025-03-21 06:27:43,193 - INFO - ===== Create connection to dwh =====
2025-03-21 06:27:43,339 - INFO - ===== Connection created =====
2025-03-21 06:27:43,340 - INFO - ===== Get only new data =====
2025-03-21 06:27:43,340 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-21 06:27:43,399 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-21 06:27:43,417 - INFO - ===== Already got only New Data  =====
2025-03-21 06:27:43,417 - INFO - ===== Start Loading marketing_campaign_deposit new data =====
2025-03-21 06:27:45,664 - INFO - ===== Success Loading marketing_campaign_deposit new data =====
2025-03-21 06:27:45,665 - INFO - ===== Create connection to dwh =====
2025-03-21 06:27:45,800 - INFO - ===== Connection created =====
2025-03-21 06:27:45,800 - INFO - ===== Get only new data =====
2025-03-21 06:27:45,800 - INFO - ===== Start Extracting customers data =====
2025-03-21 06:27:45,852 - INFO - ===== Success Extracting customers data =====
2025-03-21 06:27:45,878 - INFO - ===== Already got only New Data  =====
2025-03-21 06:27:45,878 - INFO - ===== Start Loading customers new data =====
2025-03-21 06:27:54,017 - INFO - ===== Success Loading customers new data =====
2025-03-21 06:27:54,017 - INFO - ===== Create connection to dwh =====
2025-03-21 06:27:54,138 - INFO - ===== Connection created =====
2025-03-21 06:27:54,139 - INFO - ===== Get only new data =====
2025-03-21 06:27:54,139 - INFO - ===== Start Extracting transactions data =====
2025-03-21 06:27:54,168 - INFO - ===== Success Extracting transactions data =====
2025-03-21 06:27:54,182 - INFO - ===== Already got only New Data  =====
2025-03-21 06:27:54,182 - INFO - ===== Start Loading transactions new data =====
2025-03-21 06:28:02,155 - INFO - ===== Success Loading transactions new data =====
2025-03-21 06:28:02,156 - INFO - Closing down clientserver connection
2025-03-21 06:30:59,269 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-21 06:30:59,281 - WARNING - No such comm: 964db93f-b863-4406-9e02-62d9a86116a6
2025-03-21 06:50:54,090 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-21 06:50:54,095 - WARNING - No such comm: df2a07fd-070b-4bf6-bcf6-f4d414f6dd6e
2025-03-21 06:54:59,085 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-21 06:54:59,091 - WARNING - No such comm: 20180770-1a32-40a0-8ddb-8eb6707c524a
2025-03-21 08:06:51,191 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-21 08:06:51,201 - WARNING - No such comm: ebc6b73c-2e9c-41d5-af38-70195f54b5dd
2025-03-21 08:11:29,269 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-21 08:11:29,277 - WARNING - No such comm: 12e993e9-51ca-4011-8482-d30ae42c2746
2025-03-21 08:20:20,755 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-21 08:20:20,772 - WARNING - No such comm: d5272e9d-2218-4ac5-a6d7-ef2262ce3d29
2025-03-23 00:44:18,642 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-23 00:44:24,081 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-23 00:44:24,081 - INFO - ===== Start Extracting education_status data =====
2025-03-23 00:44:24,656 - INFO - ===== Success Extracting education_status data =====
2025-03-23 00:44:24,656 - INFO - ===== Start Extracting marital_status data =====
2025-03-23 00:44:24,725 - INFO - ===== Success Extracting marital_status data =====
2025-03-23 00:44:24,726 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-23 00:44:24,814 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-23 00:44:24,859 - INFO - ===== Start Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-23 00:44:24,901 - INFO - Renamed Columns
2025-03-23 00:44:24,963 - INFO - Removed '$' in balance column
2025-03-23 00:44:24,997 - INFO - Casted balance column to integer
2025-03-23 00:44:25,067 - INFO - Converted duration in year
2025-03-23 00:44:25,097 - INFO - Casted duration into intefer
2025-03-23 00:44:25,099 - INFO - ===== Finish Transforming DataFrame[loan_data_id: int, age: int, job: string, marital_id: int, education_id: int, default: boolean, balance: string, housing: boolean, loan: boolean, contact: string, day: int, month: string, duration: int, campaign: int, pdays: int, previous: int, poutcome: string, subscribed_deposit: boolean, created_at: timestamp, updated_at: timestamp] data =====
2025-03-23 00:44:25,103 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-23 00:44:25,134 - INFO -  Selected columns from Bank transaction data 
2025-03-23 00:44:25,152 - INFO -  Renamed Columns 
2025-03-23 00:44:25,192 - INFO -  Mapped Gender Column 
2025-03-23 00:44:25,216 - INFO - Casted account_balance Column into float
2025-03-23 00:44:25,399 - INFO - Casted birth_date Column into date format
2025-03-23 00:44:25,834 - INFO - Manipulated birth_date column. If birth_date>earliest transaction date birth_date is invalid. chamged it to 1800-01-01 so operational team can rechecj the data to the customer 
2025-03-23 00:44:25,839 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: date, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-23 00:44:25,841 - INFO - ===== Start Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-23 00:44:25,855 - INFO -  Select columns from bank_transaction data
2025-03-23 00:44:25,863 - INFO - Renamed columns
2025-03-23 00:44:25,877 - INFO - Casted transaction_date column to date format
2025-03-23 00:44:25,898 - INFO - Casted transaction_amount column to float
2025-03-23 00:44:27,662 - INFO - Casted transaction_time column to time format
2025-03-23 00:44:27,664 - INFO - ===== Finish Transforming DataFrame[TransactionID: string, CustomerID: string, CustomerDOB: string, CustGender: string, CustLocation: string, CustAccountBalance: string, TransactionDate: string, TransactionTime: string, TransactionAmount (INR): string] data =====
2025-03-23 00:44:27,664 - INFO - ===== Create connection to dwh =====
2025-03-23 00:44:28,087 - INFO - ===== Connection created =====
2025-03-23 00:44:28,087 - INFO - ===== Get only new data =====
2025-03-23 00:44:28,087 - INFO - ===== Start Extracting education_status data =====
2025-03-23 00:44:28,142 - INFO - ===== Success Extracting education_status data =====
2025-03-23 00:44:28,158 - INFO - ===== Already got only New Data  =====
2025-03-23 00:44:28,158 - INFO - ===== Start Loading education_status new data =====
2025-03-23 00:44:29,362 - INFO - ===== Success Loading education_status new data =====
2025-03-23 00:44:29,362 - INFO - ===== Create connection to dwh =====
2025-03-23 00:44:29,528 - INFO - ===== Connection created =====
2025-03-23 00:44:29,529 - INFO - ===== Get only new data =====
2025-03-23 00:44:29,529 - INFO - ===== Start Extracting marital_status data =====
2025-03-23 00:44:29,596 - INFO - ===== Success Extracting marital_status data =====
2025-03-23 00:44:29,616 - INFO - ===== Already got only New Data  =====
2025-03-23 00:44:29,616 - INFO - ===== Start Loading marital_status new data =====
2025-03-23 00:44:30,119 - INFO - ===== Success Loading marital_status new data =====
2025-03-23 00:44:30,120 - INFO - ===== Create connection to dwh =====
2025-03-23 00:44:30,234 - INFO - ===== Connection created =====
2025-03-23 00:44:30,235 - INFO - ===== Get only new data =====
2025-03-23 00:44:30,235 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-23 00:44:30,300 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-23 00:44:30,320 - INFO - ===== Already got only New Data  =====
2025-03-23 00:44:30,320 - INFO - ===== Start Loading marketing_campaign_deposit new data =====
2025-03-23 00:44:31,710 - INFO - ===== Success Loading marketing_campaign_deposit new data =====
2025-03-23 00:44:31,710 - INFO - ===== Create connection to dwh =====
2025-03-23 00:44:31,838 - INFO - ===== Connection created =====
2025-03-23 00:44:31,839 - INFO - ===== Get only new data =====
2025-03-23 00:44:31,839 - INFO - ===== Start Extracting customers data =====
2025-03-23 00:44:31,898 - INFO - ===== Success Extracting customers data =====
2025-03-23 00:44:31,925 - INFO - ===== Already got only New Data  =====
2025-03-23 00:44:31,925 - INFO - ===== Start Loading customers new data =====
2025-03-23 00:44:41,022 - INFO - ===== Success Loading customers new data =====
2025-03-23 00:44:41,022 - INFO - ===== Create connection to dwh =====
2025-03-23 00:44:41,144 - INFO - ===== Connection created =====
2025-03-23 00:44:41,144 - INFO - ===== Get only new data =====
2025-03-23 00:44:41,144 - INFO - ===== Start Extracting transactions data =====
2025-03-23 00:44:41,209 - INFO - ===== Success Extracting transactions data =====
2025-03-23 00:44:41,227 - INFO - ===== Already got only New Data  =====
2025-03-23 00:44:41,227 - INFO - ===== Start Loading transactions new data =====
2025-03-23 00:44:49,691 - INFO - ===== Success Loading transactions new data =====
2025-03-23 00:44:49,692 - INFO - Closing down clientserver connection
2025-03-23 00:49:19,201 - INFO - ===== Start Extracting data/new_bank_transaction.csv data =====
2025-03-23 00:49:23,569 - INFO - ===== Success Extracting data/new_bank_transaction.csv data =====
2025-03-23 00:49:23,569 - INFO - ===== Start Extracting education_status data =====
2025-03-23 00:49:23,962 - INFO - ===== Success Extracting education_status data =====
2025-03-23 00:49:23,962 - INFO - ===== Start Extracting marital_status data =====
2025-03-23 00:49:24,027 - INFO - ===== Success Extracting marital_status data =====
2025-03-23 00:49:24,027 - INFO - ===== Start Extracting marketing_campaign_deposit data =====
2025-03-23 00:49:24,118 - INFO - ===== Success Extracting marketing_campaign_deposit data =====
2025-03-23 01:26:41,884 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-23 01:26:41,896 - WARNING - No such comm: e07a6ea9-132f-4c08-941f-df16d4cc0e67
2025-03-23 01:48:43,091 - ERROR - No such comm target registered: jupyter.widget.control
2025-03-23 01:48:43,098 - WARNING - No such comm: 691ae587-06c1-4d52-ad63-a32c6a1d8d92
